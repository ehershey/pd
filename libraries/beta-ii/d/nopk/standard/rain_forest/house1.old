#include <std.h>
#include <rain.h>

// inherit ROOM;
inherit VAULT;

string *caught;

void unlock_bookshelf();
void open_bookshelf();
object rm;

create() {
   ::create();
   set_short("A house");
   set_long("You are standing in a small family room. There is "
            "a table sitting in the center of the room. You see "
            "a bookshelf sitting over at the edge of the room.");
   set_exits((["out" : ROOMS"home1",
               "south" : ROOMS"house12",
               "bookshelf" : ROOMS"bookshelf" ]));
   set_items((["table" : "This is a large wooden table with a vase "
               "sitting on it.",
               "vase" : "This vase has something shiny in it ",
               "bookshelf" : "On the shelf there are verious books.",
               "books" : "The books have a key hole in them!"]));

  set_door("bookshelf", ROOMS"bookshelf", "bookshelf", "book key");
  set_func("bookshelf", "open", "open_bookshelf" );
  set_func("bookshelf", "close", "close_bookshelf");
  add_invis_exit("bookshelf");
  set_locked("bookshelf", 1);
  rm = this_object();
  restore_object("/d/standard/rain_forest/house1");
}
int close_bookshelf()
{
 write("You secret bookshelf door closes slowly.");
 add_invis_exit("bookshelf");
 return 1;
}

int open_bookshelf()
{
 remove_invis_exit("bookshelf");
 write("The secret bookshelf door creaks open.");
 return 1;
}
int vase_search()
{
write("You find a key in the vase!");
new(OBJ"key")->move(this_player());
remove_search("vase");
return 1;
}
int amulet_search()
{
new("/wizards/inferno/amulet")->move(this_player());
log_file("enter", "[*]"+capitalize(this_player()->query_name())+".");
caught += ({ this_player()->query_name() });  
save_object("/d/standard/rain_forest/house1");
return 1;
}
int asdf_search()
{
write("asdf");

return 1;
}
reset() {
   ::reset();
   set_search("vase", (: this_object(), "vase_search" :));
   set_search("asdf", (: this_object(), "asdf_search" :));
   if(!present("child"))
    new(MOB"child.c")->move(this_object());
   if (!present("mother"))
    new(MOB"mother.c")->move(this_object());
   if (!present("father"))
    new(MOB"father.c")->move(this_object());
}
int bookshelf()
{
 if (invis_exit("bookshelf"))
   {
    write("What?");
    return 1;
   }
 return 0;
}

void init()
{
 ::init();
 add_action("bookshelf", "bookshelf");
}
