#include <std.h>
#include <tombar.h>

inherit ROOM;
int open;

void create() {
    ::create();
    set_name("The entrance to a temple");
    set_properties(([ "light": 1, "night light": 1 ]));
   set_items(([
     "indention":"It looks like you could place something there.",
     ]));
    set_exits(([
	"south" : ROOMS"island/1",
	"enter" : ROOMS"1",
      ]));
    set_items(([
      ]));
    add_pre_exit_function("enter", "check_open");
}

string query_long() {
    if(!open)
	return "Vines are covering thick stone walls.  This place looks "
	"ancient.  A large stone doorway stands in front of you.  The door "
	"seems to be closed, and no handles of any kind can be seen.  "
	"There is a small indention on the right side pillar of the door.";
    return "Vines are covering thick stone walls.  This place looks "
    "ancient.  A large stone doorway stands in front of you.  The door "
    "is open.  Strong energy seems to be emitted from the doorway.";
}

int check_open () {
    if(!open) {
	write("The door is closed and you cannot get in the temple.");

	return 0;
    }
    return 1;
}

void reset() {
   ::reset();
   if(open) message("info", "The door swings back closed.", this_object());
   open=0;
}

void init() {
   ::init();
   add_action("place", "place");
}

int place(string s) {
   if(s != "orb" && s != "black orb") return 0;
   if(open) return notify_fail("There is something already placed in the indention.\n");
   if(!wizardp(this_player())) return notify_fail("Nothing happens.\n");
   if(!present("tombar_black_orb", this_player())) return 0;
   write("You place the black orb into the indention, and door the opens.");
   say(this_player()->query_cap_name()+" places a black orb in the indention and the door swings open.\n");
   present("tombar_black_orb", this_player())->remove();
   open=1;
   return 1;
}

