#include <std.h>
#include <waterworld.h>
#include <security.h>
inherit "std/barkeep";

mapping quiz_track;
#define ANSWER 2
#define QUESTION 1
#define INDEX 0

void give_question(string pname);
void check_answer(string pname, string what);

string immort;
void create()   {
        ::create();
            set_name("quessalaz");
           set_id(({"quessalaz","tourtoise","turtle"}));
           set_short("Quessalaz, the ancient sea turtle");
           set_long("This is the ancient sea turtle, Quessalaz."
                   " He is a complete master of all informantion about his home around him, Tirun's Barrier Reef."
                  " If you wish to pass this gate-keeper, You will have to answer his questions."
                  "\n\n The commands are as follows;"
                   "\n\n     1) Tell quessalaz next question please"
                  "\n\n     2) Tell quessalaz the answer is _____"
                 );
             set_level(200);
             set_body_type("fish");
             set_gender("male");
            set_race("turtle");
             set_class("fighter");
             set_subclass("warrior");
            quiz_track=([]);
             set_emotes(3,({
                 "Quessalaz shifts through his record books to find some adventurer's status with him.",
                 "Quessalaz works out on his 'Buff-o-matic' for awhile.",
                  "Quessalaz looks you over slowly, snorts softly and goes to his books.",
                 "Quessalaz lays in his bed of seagrass and slowly begins to dine.",
                 "Quessalaz grumbles that to many pursue power over knowledge....",
                  "Quessalaz appears to be totally zoned out on his 'Speedy Tourtoise'..."
                            }),0);
}
////// Pearl routines
void catch_tell(string recieved)
  {
      string pname;
      string what;
    if(!sizeof(quiz_track)) {
               restore_object("/wizards/ironman/waterworld/trivia/save/records.o");
                              }
////// questions
    if(sscanf(recieved,"%s tells you: next question please",pname)==1)
               {
         call_out("give_question",2,pname);
             return;
             }
////  answers
        else if(sscanf(recieved,"%s tells you: the answer is %s",pname,what)==2)
        {
         call_out("check_answer",2,pname,what);
       return;
         }


   }
// Answer routine 

void check_answer(string pname, string what)
         {
              pname=lower_case(pname);
             if(!find_player(pname)) {return;}
             if(!quiz_track[pname] || !quiz_track[pname]["quiz"]) 
                 {
                     force_me("tell "+pname+"What are you talking about?");
                     return;
                 }
             if(what !=quiz_track[pname]["quiz"][ANSWER])
                 {
                      force_me("tell "+pname+" Sorry young one. Ya gotta look around more for that answer is wrong.");
                 force_me("tell "+pname+" The question was as follows;\n"+quiz_track[pname]["quiz"][1]);
                 }
             else {
                   force_me("tell "+pname+" Now thats how ya make an ol' sea turtle proud!! Ya got it right.");
                   quiz_track[pname]["quiz"]=0;
                  quiz_track[pname]["score"]=(quiz_track[pname]["score"])+1;
                   force_me("tell "+pname+" You have answered "+(quiz_track[pname]["score"])+" question(s) correctly for me to date.");
               save_object("/wizards/ironman/waterworld/trivia/save/records");
                     }
               return;

               }



// Question routine

void give_question(string pname)
       {
            pname=lower_case(pname);
            if(!find_player(pname))
               return;
           if(!present(pname,environment()))   {
             force_me("tell "+pname+" Be polite to an ol' sea turtle youngun'\n  Come visit me if you wish to hear the next question.");
             return;
                }
            if (!quiz_track[pname]) {quiz_track[pname]=([]);}
            if (!quiz_track[pname]["quiz"]) {
                quiz_track[pname]["quiz"]=TRIVIA"TRIVIA_GAME.c"->trivia_engine();
                 force_me("tell "+pname+" The question is as follows;\n"+quiz_track[pname]["quiz"][1]);
               save_object("/wizards/ironman/waterworld/trivia/save/records");
             return;
                 }
            else {
                 force_me("tell "+pname+" Now listen youngun'.\n I can only keep track of one question for a person at a time!!");
                  return;
                           }
      }

int is_invincible() {
      object tp;

       tp=previous_object();
 
      message("info","%^GREEN%^Quessalaz%^RESET%^ snorts in your general direction as you approach him!!\n\n The force of the blast %^RED%^%^BOLD%^SLAMS%^ you into the far wall!!\n\n",tp);
       tp->damage(100);
      message("info","%^GREEN%^Quessalaz%^RESET%^ snorts in "+(tp->query_cap_name())+"'s direction!!\n\n They're slammed into the far wall!!",environment(tp),tp);
       force_me("say I'm older then time child..... How would you hope to attack someone such as me??\n\n");
       force_me("emote snorts again and returns to his bed of seagrass...\n\n");

      return 1;
}

int inquiry(string pname) {
     if(quiz_track[pname]) {return quiz_track[pname]["score"]; }
     else {return 0;}
}
