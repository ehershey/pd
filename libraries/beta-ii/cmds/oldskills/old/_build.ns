//      /bin/user/_build.c
//      ranger ability to build fires/shelter
//      created by Nightshade 11-10-01

#include <std.h>

inherit DAEMON;

int cmd_build(string str) {
    if (this_player()->query_subclass() != "ranger") {
       notify_fail("You cannot do that.");
       return 0;
    }
    if(!str && (str != "shelter") && (str != "fire")) {
        notify_fail("Build what?\n");
        return 0;
    }
    if(this_player()->query_disable()) {
        write("You are too busy doing something else!");
        return 1;
    }
    this_player()->set_disable();
    if(str == "shelter") {
        //call out to shelter function goes here
        write("This command is not done, yet.  Build a fire.  ;)");
        return 1;
    }
    if(!present("firewood",this_player())) {
        notify_fail("You do not have anything to start a fire with!\n");
        return 0;
    }
    write("You begin building a fire.");
    say(this_player()->query_cap_name()+" squats and starts to build a fire.");
    call_out("fire",4);
    return 1;
}

int fire() {
    object ob;

    if(this_player()->query_skill("nature") < random(50) + 20) {
        write("A gust of wind blows out your fire before you can build it.");
        say("A slight breeze blows out "+pluralize(this_player()->query_cap_name())+" puny fire.");
        return 1;
    }
    write("Your fire spreads and catches.");
    say(pluralize(this_player()->query_cap_name())+" fire comes to life.");
    ob = new("/d/standard/obj/misc/forage/campfire");
    ob->move(environment(this_player()));
    present("firewood",this_player())->remove();
    return 1;
}

void help() {
    write("Syntax: <build [fire\\shelter]>\n\n"
      "Rangers can build a fire to warm themselves\n"
      "and brew tea, or build a shelter for protection.\n"
    );
}
