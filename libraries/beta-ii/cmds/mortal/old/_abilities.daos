// modified by stormbringer
// seeker 06/02/2000
// Fixed by Whit 01:03:12 AM 01/04/02
#include <std.h>
#include <daemons.h>
inherit DAEMON;
//--leave abilities meant for Other catagory out of the list--
mapping spell_class= ([
  "backstab" : "attack",
"pirouette"     : "attack",
  "behead"   : "attack",
  "chistrike": "attack",
  "circlekick":"attack",
  "charge"   : "attack",
  "bladedance":"attack",
  "choke"    : "attack",
  "crush"    : "attack",
  "circle"   : "attack",
  "cloak"    : "deception",
  "clobber" : "attack",
  "cripple"  : "attack",
  "dakzual"  : "attack",
  "darkshift": "deception",
  "coupedegrace": "attack",
  "crushingblow"  : "attack",
  "denmak"   : "attack",
  "eagleclaw"   : "attack",
  "wrap"     : "defense",
  "trap"     : "deception",
  "cut"      : "attack",
  "throw"    : "attack",
  "shoot"    : "attack",
  "disarm"   : "defense",
  "dragonfury":"attack",
  "tailspear": "attack",
  "flameclaw": "attack",
  "furystrike":"attack",
  "swoop"    : "attack",
  "roar"     : "defense",
  "bite"     : "attack",
  "disguise" : "deception",
  "flick"    : "attack",
  "flip"     : "attack",
  "flirt"    : "deception",
  "gore"     : "attack",
  "headbutt" : "attack",
  "impale"   : "attack",
  "ironfist" : "attack",
  "ironskin" : "defense",
  "jab"      : "attack",
  "juggle"   : "attack",
  "lunge"    : "attack",
  "massacre" : "attack",
  "claw"     : "attack",
  "maul"     : "attack",
  "mudarmor" : "defense",
  "mystify" : "deception",
  "whip"     : "attack",
  "entangle" : "attack",
  "mudthrow" : "attack",
  "mug"      : "attack",
  "openpalm" : "attack",
  "paintouch": "attack",
  "palm"     : "attack",
  "parry"    : "defense",
  "peek"     : "deception",
  "pick"     : "deception",
  "rage"     : "attack",
  "rush"     : "attack",
  "sharpen"  : "weapon",
  "slam"     : "attack",
  "slash"    : "attack",
  "smash"    : "attack",
  "snap"     : "attack",
  "snapkick" : "attack",
  "sneak"    : "deception",
  "stab"     : "attack",
  "stalk"    : "deception",
  "hack"     : "attack",
  "steal"    : "deception",
  "breathe"  : "attack",
  "strike"   : "attack",
  "stun"     : "attack",
  "pummel"  : "attack",
  "stuntouch": "attack",
  "thrust"   : "attack",
  "trip"     : "attack",
  "whirl"    : "attack"
]);
string *directories = 
({
  "/cmds/skills/",
  "/cmds/hm/" 
});
int cmd_abilities(string str)
{
    string *spell, *can, *attack, *defense, *weapon, *deception, *other;
    //    string *spe;
    string tmp;
    //    object ob;
    int i, a;
    attack = ({});defense = ({});weapon = ({});deception = ({});other = ({});
    i = sizeof(directories);
    while(i--)
    {
	spell = get_dir(directories[i]);
	if (!spell) continue;
	a = sizeof(spell);
	while(a--)
	{
	    if (!spell[a]) continue;
	    if (sscanf(spell[a], "%s.c",tmp)!=1) continue;
	    tmp = directories[i]+spell[a];
	    if (tmp->abil() )
	    {
		if (sscanf(spell[a], "_%s.c", tmp)!=1) continue;
		if (!can) can = ({ tmp });
		else can += ({ tmp });
	    }
	}
    }
    a = sizeof(can);
    while(a--)
    {
	if (spell_class[can[a]]=="attack") attack += ({ can[a] });
	if (spell_class[can[a]]=="defense") defense += ({ can[a] });
	if (spell_class[can[a]]=="weapon") weapon += ({ can[a] });
	if (spell_class[can[a]]=="deception") deception += ({ can[a] });
	if (spell_class[can[a]]=="other") other += ({ can[a] });
    }
    other = can - (attack+defense+weapon+deception+other);
    if (attack==({})) attack += ({ "(none)" });
    if (defense==({})) defense += ({ "(none)" });
    if (weapon==({})) weapon += ({ "(none)" });
    if (deception==({})) deception += ({ "(none)" });
    if (other==({})) other += ({ "(none)" });
    message("no_wrap", "%^BLUE%^+=+=%^BOLD%^(%^RESET%^ Abilities %^BLUE%^%^BOLD%^)"
      "%^RESET%^%^BLUE%^+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=\n",
      this_player());
    write("%^RED%^%^BOLD%^[Attack]");
    write("  "+implode(attack, ", "));
    write("%^MAGENTA%^%^BOLD%^[Defense]");
    write("  "+implode(defense, ", "));
    write("%^BLUE%^%^BOLD%^[Weapon]");
    write("  "+implode(weapon, ", "));
    write("%^GREEN%^%^BOLD%^[Deception]");
    write("  "+implode(deception, ", "));
    write("%^CYAN%^%^BOLD%^[Other]");
    write("  "+implode(other, ", "));
    /*    
	if (!tmp) return 1;
	i = sizeof(can);
	b= 0;
	while(i--)
	 {
	  b++;
	  if (i) message("no_wrap", can[i]+", ", this_player());
	    else message("info", can[i], this_player());
	  if (b>=7)  { message("no_wrap", "\n", this_player()); b=0; }
	 } */
    return 1;
}
int help()
{
    write( @EndText
Syntax: abilities
Effect: gives a list of the abilities your character has.
See also: spells, songs
EndText
    );
    return 1;
}
