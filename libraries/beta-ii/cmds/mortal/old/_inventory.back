// _inventory.c: by Seeker Friday June 9 2000 -- 23:25
// My own inventory command...

#include <std.h>
#include <daemons.h>

inherit DAEMON;

#define ISIN(el,array) (member_array(el,array) != -1)

int get_weight(object *ob)
{
    int i=sizeof(ob);
    int a;

    if (!i) return 0;
    while(i--)
	if (!a)
	    a = to_int(ob[i]->query_weight());
	else a += to_int(ob[i]->query_weight());
    return a;
}
int get_value(object *ob)
{
    int i=sizeof(ob);
    int a;

    a = 0;
    if (!i) return 0;
    while(i--)
       if (ob[i]->query_value())
        if (!a)
            a = to_int(ob[i]->query_value());
        else a += to_int(ob[i]->query_value());
    return a;
}
int get_wcac(object *ob)
{
    int i=sizeof(ob);
    int a;

    if (!i) return 0;
    while(i--)
  {
      if (ob[i]->query_wc())
        if (!a)
            a = ob[i]->query_wc();
        else a += ob[i]->query_wc();

      if (ob[i]->query_ac())
            if (!a)
            a = ob[i]->query_ac();
        else a += ob[i]->query_ac();
}
    return a;
}

string get_autoload(object *ob)
{
    int i=sizeof(ob);
    int a=0;

    if (!i) return 0;
    while(i--)
	if (ob[i]->query_auto_load()) a++;

    if (!a && sizeof(ob) == 1) return "No";
    if (a  && sizeof(ob) == 1) return "Yes";
    if (!a) return "None";
    if (a == sizeof(ob)) return "All";
    return "Some";

}
int cmd_inventory(string str)
{
    object *obj;
    mapping inv=([]);
    string sh, *shorts, tmp;
    int a, b, weight, siz, we, enc;

   
    if(effective_light(this_player()) < -6) {
	notify_fail("It is too dark.\n");
	return 0;
    }

    obj = all_inventory(this_player());
   /* if (!sizeof(obj)) 
    {
	notify_fail("You are empty handed.\n");
	return 0;
    } */
    b = sizeof(obj);
    a = 0;
    shorts = ({ }); 
    while(a++<b)
    {
	sh = TERMINAL_D->no_colours(obj[a-1]->query_short());
	if (!inv[sh])
	    inv[sh] = ({ obj[a-1] });
	else inv[sh] += ({ obj[a-1] });
	if (!ISIN(sh, shorts))  shorts += ({ sh });
    }
    a = 0; b = sizeof(inv);
    message("inv", 
"%^CYAN%^%^BOLD%^               Name                      Autoload   Weight   Value   WC/AC\n"
"%^BLUE%^^-------------------------------------^-----------^--------^-------^-------^", this_player());

    if (!sizeof(obj))
      write("You are empty handed.");
    while(a++<b)
    {
	obj = inv [ shorts[ a - 1 ] ];
	siz = sizeof( obj );
	weight += get_weight(obj);
      if (shorts[a-1] != "" && shorts[a-1]) {

      /* Name of the object(consolidated) */
      sh = "%^BOLD%^%^BLUE%^|%^RESET%^%^CYAN%^ "+arrange_string(capitalize(consolidate(siz, shorts[a-1])),36);
      sh += "%^BOLD%^%^BLUE%^|";
      /* If the object does autoload */
      sh += "%^RESET%^%^CYAN%^    "+arrange_string(get_autoload(obj),7);
      sh += "%^BOLD%^%^BLUE%^|";
      /* Checks the weight */
      sh += "%^RESET%^%^CYAN%^   "+arrange_string(get_weight(obj), 5);
      sh += "%^BOLD%^%^BLUE%^|";
      /* Checks the value */
      if (get_value(obj))
      sh += "%^RESET%^%^CYAN%^   "+arrange_string(get_value(obj), 4);
      else
      sh += "%^RESET%^%^CYAN%^   -   ";
      sh += "%^BOLD%^%^BLUE%^|";
      /* Checks the total WC/AC */
      if (get_wcac(obj))
      sh += "%^RESET%^%^CYAN%^   "+arrange_string(get_wcac(obj), 4);
      else
      sh += "%^RESET%^%^CYAN%^   -   ";
      sh += "%^BOLD%^%^BLUE%^|";
      message("info", sh, this_player());
      }
    }
message("info", "%^BOLD%^%^BLUE%^!-------------------------------------+-----------+--------+-------+-------'", this_player());
sh = "%^BOLD%^%^BLUE%^| ";
    enc = this_player()->query_max_internal_encumbrance()/2;
/*    message("info", "%^BOLD%^%^WHITE%^                                  
Total Weight: "+to_int(percent(weight, enc))+"% ("+weight+"/"+enc+")",
this_player());
*/
 tmp =sprintf("%d%% (%d/%d)", to_int(percent(weight,enc)), weight, enc);
sh += "%^BOLD%^%^CYAN%^ Total Weight:%^RESET%^%^CYAN%^ "+
      sprintf("%-21s", tmp);
sh += "%^BOLD%^%^BLUE%^|";
message("info", sh, this_player());
message("info", "%^BOLD%^%^BLUE%^`-------------------------------------'%^RESET%^", this_player());
 
    return 1;

}
