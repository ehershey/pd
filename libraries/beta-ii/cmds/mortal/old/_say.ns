//      /bin/user/_say.c
//      from the Nightmare Mudlib
//      the say command
//      created by Descartes of Borg 930818

#include <std.h>
#include <daemons.h>

inherit DAEMON;

int cmd_say(string str) {
  object *ob;
  string type;
  int i;

    if(this_player()->query_ghost()) {
        message("talk", "You howl pitifully.", this_player());
        message("talk", "You hear a pitiful howl.", environment(this_player()),
          ({ this_player() }));
        return 1;
    }
    if(!str || str == "") {
        notify_fail("You mutter to yourself.\n");
        return 0;
    }
    if(str[sizeof(str)-1] == '!')
        type = "exclaims";
    else if(str[sizeof(str)-1] == '?')
        type = "asks";
    else
        type = "says";

    LAST_D->add_say(this_player()->query_name(),  "%^CYAN%^You "+type[0..(sizeof(type)-2)]+":%^RESET%^ "+str);
    ob = all_inventory(environment(this_player()));
    i = sizeof(ob);
    while(i--)
     {
     if (ob[i]!= this_player() )
      LAST_D->add_say(ob[i]->query_name(), "%^CYAN%^"+
 (string)previous_object()->query_cap_name()+" "+type+":%^RESET%^ "+str);
     }

    message("talk", "%^CYAN%^"
                    "You "+type[0..(sizeof(type)-2)]+":%^RESET%^ "+str+"\n", this_player());

    message("talk", "%^CYAN%^" +
(string)previous_object()->query_cap_name()+" "+type+":%^RESET%^ "+str+"\n", environment(this_player()), this_player());

    return 1;
}

void help() {
    write("Syntax: <say [message]>\n\n"
      "Sends out a message to everyone in the room notifying them that "
      "you said it."
      "\n\nSee also: tell, whisper, shout, yell, class, emote"
    );
}
