#include <std.h>
#include <dirs.h>
#define MASTER "/cmds/song/master"
inherit DAEMON;

int cmd_songs(string str) {
    int i;
    string type, tmp="";
    string *bad = ({ }), *good = ({ }), *atk = ({ }), *other = ({ });
    string *all = ({ });
    object ts;

    all = MASTER->query_songs(this_player());
    i = sizeof(all);
    while (i--) {
	type = MASTER->find_song(all[i])->query_type();
	ts = MASTER->find_song(all[i]);
	if (ts->query_auto())
	    atk += ({ all[i] });
	else
	if (type == "bad")
	    bad += ({ all[i] });
	else
	if (type == "good")
	    good += ({ all[i] });
	else other += ({ all[i] });
    }
    write("%^RESET%^%^BLUE%^+=+="
      "%^BOLD%^( "
      "%^WHITE%^Songs "
      "%^BLUE%^)%^RESET%^%^BLUE%^"
      "+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=");
    write("%^BOLD%^%^RED%^Attack:%^RESET%^");
    if (sizeof(atk) >= 1) {
	i = sizeof(atk);
	while (i--) {
	    tmp = "";
	    tmp += arrange_string("   "+atk[i], 30);
	    if (i > 0) {
		i--;
		tmp += atk[i];
	    }
	    write(tmp);
	}
    } else write("   (none)");
    write("%^BOLD%^%^MAGENTA%^Beneficial:%^RESET%^");
    if (sizeof(good) >= 1) {
	i = sizeof(good);
	while (i--) {
	    tmp = "";
	    tmp += arrange_string("   "+good[i], 30);
	    if (i > 0) {
		i--;
		tmp += good[i];
	    }
	    write(tmp);
	}
    } else write("   (none)");
    write("%^BOLD%^%^GREEN%^Detrimental:%^RESET%^");
    if (sizeof(bad) >= 1) {
	i = sizeof(bad);
	while (i--) {
	    tmp = "";
	    tmp += arrange_string("   "+bad[i], 30);
	    if (i > 0) {
		i--;
		tmp += bad[i];
	    }
	    write(tmp);
	}
    } else write("   (none)");
    write("%^BOLD%^%^CYAN%^Other:%^RESET%^");
    if (sizeof(other) >= 1) {
	i = sizeof(other);
	while (i--) {
	    tmp = "";
	    tmp += arrange_string("   "+other[i], 30);
	    if (i > 0) {
		i--;
		tmp += other[i];
	    }
	    write(tmp);
	}
    } else write("   (none)");
    return 1;
}

void help() {
    write(@ENDSTR
Syntax: <songs>

This command displays what songs you currently know.
ENDSTR);
}
