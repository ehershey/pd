//  /bin/user/_languages.c
//  written by Valodin, August 12, 1993


#include <std.h>
#include <daemons.h>
#define OLD_LANGUAGES ({ "elvish", "giantish", "orcish", "artrellian", "mischief", "sensuous", "hobbitish", "pseudo-speak", "gnomish" })


inherit DAEMON;

string profs(int prof)
{
     switch(prof)
      {
      case 0:
         return "Unknowledgeable";
        break;
      case 1:
         return "Stuttering";
        break;
      case 2:case 3:case 4:
         return "Learning";
        break;
      case 5:
        return "Moderate";
        break;
      case 6:case 7:
        return "Proficient";
        break;
      case 8:case 9:
        return "Skilled";
        break;
      case 10:
        return "Fluent";
      }

}
int cmd_languages(string str)
{
  string *langs, seeker;
  int i , lsz, prof, flag, a, second;

  flag = 0;
  a = 0;
  second = 0;
  if(!this_player()->query_race())
    return notify_fail("You must choose a race before you know how to speak a language.\n");
//  langs = this_player()->query_all_languages();
  langs = LANG_D->all_languages();
  // Rigged to prevent multiples - NS
  langs -= ({"selunian"});
  langs += ({"selunian"});
  langs -= ({"pulchra"});
  langs += ({"pulchra"});
  if((lsz = sizeof(langs)) == 0)
  {
    write("You need to visit the sage and ask him to fix you.");
    return 1;
  }
  write("%^BLUE%^=+=+=%^BOLD%^(%^WHITE%^ Languages %^BLUE%^)%^RESET%^%^BLUE%^+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+");
  write("%^BOLD%^%^WHITE%^Your primary language is " + 
        capitalize((string)this_player()->query_primary_lang()) + ".%^RESET%^");
  write("%^BLUE%^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
  for(i = 0; i < lsz; i++)
  {
    if (!langs[i]) continue;
    prof = this_player()->query_lang_prof(langs[i]);
    if(member_array(langs[i], OLD_LANGUAGES) != -1)
      flag = 1;
 seeker = arrange_string( arrange_string("%^BOLD%^%^CYAN%^"+capitalize(langs[i]),10)+" : %^RESET%^"+profs(prof), 30);
 if (i+1<lsz)
   {
   
 seeker += arrange_string( arrange_string("%^BOLD%^%^CYAN%^"+capitalize(langs[i+1]),10)+" : %^RESET%^"+profs(this_player()->query_lang_prof(langs[i+1])), 30);
     i++;
   }

   write(seeker);
  }
  if(flag)
    write("You need to go visit the sage and ask him to fix your "
          "languages.");
  write("%^BLUE%^=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=\n");

  return 1;
}

int help()
{
  message("help", "Command: languages\n"
          "Syntax: languages\n\n"
          "This command tells you all the languages you can speak.  If you "
          "have problems with languages, you should visit the sage and ask "
          "him to fix you.  If you are skilled in one of these languages you "
          "should also visit the sage and have him fix you:\n"
          "  elvish, giantish, orcish, artellian, mischief, sensuous,\n"
          "  hobbitish, pseudo-speak, or gnomish", this_player());
  message("help", "\nSee also: tongues, speak, shout", this_player());
  return 1;
}
