// remort -- seeker@iuis.org  Tuesday October 31 2000 -- 00:01 -08:00
#include <daemons.h>
#include <flags.h>
inherit DAEMON;
#define tp this_player()
#define HELP "/doc/help/classes/"+clas
#define PK_WAIT 60*60*24 // one full day
#define DRAGON_SUBS ({"red","blue","black","white"})
void remort_character();
string clas,subclas;
mapping drag;
int cmd_remort(string str)
{
    if (!wizardp(this_player())) return notify_fail("This is still being worked on.\n");

    if (file_name(environment(this_player()))[0..13] != "/d/nopk/tirun/")
      return notify_fail("You may only remort while in Tirun.\n");

    clas="";
    subclas="";
    drag=([]);

    message("no_wrap",
	"%^BOLD%^%^WHITE%^-------------------------------------------------------------------------------\n"
	"                             Class Change System\n"
	"%^BOLD%^%^WHITE%^-------------------------------------------------------------------------------\n\n"
	"This system will allow you to change your class/subclass.  Do you want to continue? <yes or no>"
		,tp);
    input_to("confirm_remort", I_NOECHO | I_NOESC);
    return 1;
}
int confirm_remort(string answer)
{
	if(answer != "y" && answer != "yes") {
		write("Remort Canceled!");
		return 1;
	}
	write(read_file("/doc/help/classes/class"));
	write("%^BOLD%^%^YELLOW%^Question: %^RESET%^Which class do you want to switch to?");
	input_to("ask_changeclass");
	return 1;
}
int ask_changeclass(string cls) {
        mapping data;
	if(!cls) cls="";
	switch(cls) {
		case "fighter":
		case "mage":
		case "clergy":
		case "rogue":
		case "wanderer":
			clas = cls;
			write(read_file(HELP));
			write("%^BOLD%^%^YELLOW%^Question: %^RESET%^Which subclass do you want to switch to?");
			input_to("ask_changesub");
			break;
                case "dragon":
                  data = this_player()->query_remort_data();
                  foreach (string color in DRAGON_SUBS)
                    if (sizeof(data[color])) drag[color]=1;
                  if (!sizeof(drag))
                    message("info", "You may not remort into a dragon.", this_player());
                  else
                    input_to("ask_changedrag");
                  break;
		case "q":
		case "quit":
			write("Goodbye!");
			return 1;
			break;
		default:
			write(read_file("/doc/help/classes/class"));
			write("%^BOLD%^%^RED%^Error: %^RESET%^You did not select an appropriate class.  Try again.");
			input_to("ask_changeclass");
			break;
	}
}
int ask_changesub(string sub) {
	int ok;
	if(sub == "q" || sub == "quit") {
		write("Goodbye
");
	}
	switch(clas) {
		case "rogue":
			switch(sub) {
				case "assassin": case "scout": case "theif": case "thug": ok=1; break;
				default: ok=0; break;
			}
			break;
                case "fighter":
                        switch(sub) {
                                case "antipaladin":
                                case "berserker": case "paladin": case "ranger": case "warrior": ok=1; break;
                                default: ok=0; break;
                        }
			break;
                case "mage":
                        switch(sub) {
                                case "necromancer": case "pyromancer": case "sorceror": case "wizard": ok=1; break;
                                default: ok=0; break;
                        }
			break;
                case "clergy":
                        switch(sub) {
                                case "cleric": case "druid": case "kataan": case "monk": ok=1; break;
                                default: ok=0; break;
                        }
			break;
                case "wanderer":
                        switch(sub) {
                                case "bard": case "gypsy": case "jester": case "swashbuckler": ok=1; break;
                                default: ok=0; break;
                        }
			break;
		default:
                        write(read_file(HELP));
                        write("%^BOLD%^%^RED%^Error: %^RESET%^You did not select an appropriate class.  Try again.");
                        input_to("ask_changesub");
			break;
	}
	if(!ok) {
		write(read_file(HELP));
		write("%^BOLD%^%^RED%^Error: %^RESET%^You did not select an appropriate subclass.  Try again.");
		input_to("ask_changesub");
		return 1;
	}
	subclas = sub;
	remort_character();
}
int ask_changedrag(string color) {
  if (member_array(color, keys(drag)) == -1)
    message("info", "You may not remort into that kind of dragon.", tp);
  else {
    clas = "dragon";
    subclas = color;
    remort_character();
  }
}
void remort_character()
{
    write("%^GREEN%^%^BOLD%^Your mind begins to cloud as you change into a "+subclas+"");
    this_player()->remort(clas, subclas);
}
int help()
{
  message("help",
    "Syntax: <remort (list)>\n\n"
    "This command allows you to save your current character information "
    "and change to another subclass. Skills, stats, and level are saved "
    "for your current subclass.",
    this_player() );
}
