// Author (??)
// Help added by Brian (1/28/92)
// rehack to check kill_ob first before continuing with kill and PK labeling
// by Valodin, Feb 13, 1993
// minor changes by Bohemund, Jan 22, 1993
// kill all and kill all <type> enabled by inferno, 7/23/00

#include <std.h>

inherit DAEMON;
 
int help();
 
int cmd_kill(string str) {
   object victim, *ob;
   int retvalue;   /* return value */
   string type;
   int i, x, o, t;
 
   if(!str) {
      return help();
   }
   if(this_player()->query_ghost()) {
      notify_fail("You're already dead!\n");
      return 0;
   }
   if(environment(this_player())->query_property("no attack")) {
      notify_fail("Greater powers prevent your malice.\n");
      return 0;
   }
   if (this_player()->query_disable() || this_player()->query_magic_round())
     return notify_fail("You are busy doing something else.\n");
  if (this_player()->query_property("passive") && !wizardp(this_player())) return notify_fail("You can't do that.\n");
   if (str == "all") {
      ob = all_inventory(environment(this_player()));
      for (x=0, o=0, i=0;x < sizeof(ob);x++, o++) {
         if (living(ob[o]) && ob[o] != this_player() && !ob[o]->query_invis()
            && !ob[o]->query_ghost() && !(ob[o]->query_rider() == this_player())
            && !wizardp(ob[o])) {
            if (this_player()->kill_ob(ob[o])) {
               tell_room(environment(this_player()), "%^BOLD%^%^RED%^"
                 +this_player()->query_cap_name()+" attacks "
                 +ob[o]->query_cap_name()+"!", ({ this_player(), ob[o] }));
               tell_object(ob[o], "%^BOLD%^%^RED%^"
                 +this_player()->query_cap_name()+" attacks you!");
               write("BOLD%^%^RED%^You attack "+ob[o]->query_cap_name()+
                 "!"); 
            this_player()->kill_ob(ob[o]);
            i = 1;
            }
         }
      }
      if (!i) {
         write("%^BOLD%^%^RED%^There is nobody here to attack!\n");
         return 1;
      }
      return 1;
   }
   if (sscanf(str, "all %s", type)) {
      ob = all_inventory(environment(this_player()));
      for (x=0, o=0, i=0;x < sizeof(ob);x++, o++) {
         if (living(ob[o]) && ob[o] != this_player() && !ob[o]->query_invis() && !ob[o]->query_ghost() && !(ob[o]->query_rider() == this_player())) {
          for (t=0;t < sizeof(ob[o]->query_id());t++) {
           if (ob[o]->query_id()[t] == type) {
            if (this_player()->kill_ob(ob[o])) {
               tell_room(environment(this_player()), "%^BOLD%^%^RED%^"
                 +this_player()->query_cap_name()+" attacks "
                 +ob[o]->query_cap_name()+"!", ({ this_player(), ob[o] }));
               tell_object(ob[o], "%^BOLD%^%^RED%^"
                 +this_player()->query_cap_name()+" attacks you!");
               write("BOLD%^%^RED%^You attack "+ob[o]->query_cap_name()+
                 "!");
            this_player()->kill_ob(ob[o]);
            i = 1;
            }
           }
          }
         }
      }
      if (!i) {
         write("%^BOLD%^%^RED%^There is nothing by the name: "+type+" here.\n");
         return 1;
      }
      return 1;
   }
   str = lower_case(str);
   victim = present(str, environment(this_player()));
   if(!victim) {
      notify_fail("You don't see that here.\n");
      return 0;
   }
   if(victim == this_player()) {
      notify_fail("Kill yourself?\n");
      return 0;
   }
   
   if(!living(victim)) {
      notify_fail("That is not a living foe.\n");
      return 0;
   }
  if (victim->query_ghost())
    {
     return notify_fail("You cannot attack ghosts..\n");
    }
   /* check for an okay hit before we actually continue, Val */
   if (!(retvalue = (int)this_player()->kill_ob(victim))) return 1;
 
   write("%^RED%^%^BOLD%^You attack "+(string)victim->query_cap_name() + "!");
   say(this_player()->query_cap_name() + " attacks " +
     victim->query_cap_name() + "!", victim);
   tell_object(victim, "%^RED%^%^BOLD%^"+this_player()->query_cap_name()+" attacks you!");
   return retvalue;
}
 
int help() {
  write("Command: kill\nSyntax: kill <living>\n"
        "This command is used to initiate combat with the "
        "living being you specify.  Once combat begins you may "
        "only end it by running away or if one of you dies. "
        "Other players may also be attacked.\n"
        "See book on playerkilling in library\n"
        "See \"help death\"\n"
        "See also: wimpy, wimpydir, follow, party\n");
  return 1;
}
/* EOF */
