//      Written by Nightshade

#include <std.h>

inherit DAEMON;

int abil();

int cmd_breathe(string str) {
    object tp, ob;
    int dam;
    tp = this_player();
    if(!abil())
        return 0;
    if(tp->query_ghost() || tp->query_race() != "dragon") {
        notify_fail("There is no fire in your blood.\n");
        return 0;
    }
    if (environment(this_player())->query_property("no attack")) {
        write("Greater powers prevent your malice.");
        return 1;
    }
    if (tp->query_casting_round()) return 1;
    if (tp->query_disable()) {
        notify_fail("You are too busy to do that!\n");
        return 0;
    }
    if (tp->query_sp() < 50 || tp->query_mp() < 40) {
        write("You do not have the energy to breathe right now.");
        return 1;
    }
    if(!str) {
        ob = (object)tp->query_current_attacker();
        if(!ob) {
            notify_fail("Syntax: <breathe [living]>\n");
            return 0;
        }
    }
    else {
        ob = present(str, environment(tp));
            if(!ob) {
                notify_fail("No "+str+" here!\n");
                return 0;
            }
    }
    if(!living(ob)) {
        notify_fail(ob->query_cap_name()+" is not a living thing!\n");
        return 0;
    }
    if(ob==tp) {
        write("Now wouldn't that be fun?");
        return 0;
    }
    if(ob->is_player() && !interactive(ob)) {
        notify_fail("You cannot attack link-dead players.\n");
        return 0;
    }
    if(!this_player()->kill_ob(ob)) {
        write(ob->quey_cap_name()+" can't be attacked by you yet.");
       return 1;
    }

    tp->set_disable();

    dam = tp->query_skill("breath")*2 +
          tp->query_skill("attack")/2 -
          ob->query_stats("dexterity") -
          ob->query_skill("defense")/2 + 30;

    if(dam < 1) {
          write("You breathe towards your enemy, but miss them!");
          say(tp->query_cap_name()+" tries to use a breath attack, but fails!");
          return 1;
    }

    dam = dam + random(dam);

    if(tp->query_subclass() == "red") {
        write("You breathe %^BOLD%^%^RED%^FIRE%^RESET%^ towards your enemy!");
        message("info", tp->query_cap_name()+" breathes %^BOLD%^%^RED%^FIRE%^RESET%^ towards you!", ob);
        say(tp->query_cap_name()+" breathes %^BOLD%^%^RED%^FIRE%^RESET%^ towards "+ob->query_cap_name()+"!", ob);

        if(ob->query_max_hp() / dam < 15) {
            write("You %^BOLD%^%^RED%^E%^YELLOW%^N%^RED%^G%^YELLOW%^U%^RED%^L%^YELLOW%^F%^RESET%^ "+ob->query_cap_name()+" in %^ORANGE%^flames%^RESET%^!");
            message("info", tp->query_cap_name()+" %^BOLD%^%^RED%^E%^YELLOW%^N%^RED%^G%^YELLOW%^U%^RED%^L%^YELLOW%^F%^RED%^S%^RESET%^ you in %^ORANGE%^flames%^RESET%^!", ob);
            say(tp->query_cap_name()+" %^BOLD%^%^RED%^E%^YELLOW%^N%^RED%^G%^YELLOW%^U%^RED%^L%^YELLOW%^F%^RED%^S%^RESET%^ "+ob->query_cap_name()+" in %^ORANGE%^flames%^RESET%^!", ob);
        }
        else {
            write("You %^ORANGE%^singe%^RESET%^ "+ob->query_cap_name()+" badly.");
            message("info", tp->query_cap_name()+" %^ORANGE%^singes%^RESET%^ you badly.", ob);
            say(tp->query_cap_name()+" %^ORANGE%^singes%^RESET%^ "+ob->query_cap_name()+" badly.", ob);
        }
        ob->damage(dam*2/3 + (random(this_player()->query_level()/2)));
    }

    if(tp->query_subclass() == "white") {
        write("You breathe %^BOLD%^%^GREEN%^POISON%^RESET%^ towards your enemy!");
        message("info", tp->query_cap_name()+" breathes %^BOLD%^%^GREEN%^POISON%^RESET%^ towards you!", ob);
        say(tp->query_cap_name()+" breathes %^BOLD%^%^GREEN%^POISON%^RESET%^ towards "+ob->query_cap_name()+"!", ob);

        if(ob->query_max_hp() / dam < 15) {
            write(ob->query_cap_name()+" becomes so badly %^RED%^poisoned%^RESET%^, they fall over %^RESET%^%^GREEN%^p%^CYAN%^u%^GREEN%^k%^CYAN%^i%^GREEN%^n%^CYAN%^g%^RESET%^!");
            message("info", tp->query_cap_name()+" %^RED%^poisons%^RESET%^ you so badly that you fall over %^RESET%^%^GREEN%^p%^CYAN%^u%^GREEN%^k%^CYAN%^i%^GREEN%^n%^CYAN%^g%^RESET%^!", ob);
            say(tp->query_cap_name()+" %^RED%^poisons%^RESET%^ "+ob->query_cap_name()+" so badly they fall over %^RESET%^%^GREEN%^p%^CYAN%^u%^GREEN%^k%^CYAN%^i%^GREEN%^n%^CYAN%^g%^RESET%^!", ob);
            ob->force_me("sit");
        }
        else {
            write("You make "+ob->query_cap_name()+" very %^GREEN%^ill%^RESET%^.");
            message("info", tp->query_cap_name()+" makes you very %^GREEN%^ill%^RESET%^.", ob);
            say(tp->query_cap_name()+" makes "+ob->query_cap_name()+" very %^GREEN%^ill%^RESET%^.", ob);
        }
        ob->add_poisoning(dam);
        ob->damage(dam/3 + (random(this_player()->query_level()/2)));
    }

    else if(tp->query_subclass() == "black") {
        write("You breathe %^BOLD%^LIGHTNING%^RESET%^ towards your enemy!");
        message("info", tp->query_cap_name()+" breathes %^BOLD%^LIGHTNING%^RESET%^ towards you!", ob);
        say(tp->query_cap_name()+" breathes %^BOLD%^LIGHTNING%^RESET%^ towards "+ob->query_cap_name()+"!", ob);

        if(ob->query_max_hp() / dam < 15) {
            write("You send "+ob->query_cap_name()+" into %^BOLD%^%^RED%^violent %^CYAN%^convulsions%^RESET%^!");
            message("info", tp->query_cap_name()+" sends you into %^BOLD%^%^RED%^violent %^CYAN%^convulsions%^RESET%^!", ob);
            say(tp->query_cap_name()+"sends "+ob->query_cap_name()+" into %^BOLD%^%^RED%^violent %^CYAN%^convulsions%^RESET%^!", ob);
        }
        else {
            write("You %^BOLD%^ZAP%^RESET%^ "+ob->query_cap_name()+" badly.");
            message("info", tp->query_cap_name()+" %^BOLD%^ZAPS%^RESET%^ you badly.", ob);
            say(tp->query_cap_name()+" %^BOLD%^ZAPS%^RESET%^ "+ob->query_cap_name()+" badly.", ob);
        }
        ob->damage(dam/3 + (random(this_player()->query_level()/2)));
        ob->set_paralyzed(1+random(2),"You are unable to control your muscles because of the electricity!");
    }

    else if(tp->query_subclass() == "blue") {
        write("You breathe %^BOLD%^%^CYAN%^ICE%^RESET%^ towards your enemy!");
        message("info", tp->query_cap_name()+" breathes %^BOLD%^%^CYAN%^ICE%^RESET%^ towards you!", ob);
        say(tp->query_cap_name()+" breathes %^BOLD%^%^CYAN%^ICE%^RESET%^ towards "+ob->query_cap_name()+"!", ob);

        if(ob->query_max_hp() / dam < 15) {
            write(ob->query_cap_name()+" %^BOLD%^%^RED%^SCREAMS%^RESET%^ as they are %^BOLD%^%^BLUE%^frozen solid%^RESET%^!");
            message("info", "You %^BOLD%^%^RED%^SCREAM%^RESET%^ as you are %^BOLD%^%^BLUE%^frozen solid%^RESET%^!", ob);
            say(ob->query_cap_name()+" %^BOLD%^%^RED%^SCREAMS%^RESET%^ as they are %^BOLD%^%^BLUE%^frozen solid%^RESET%^!", ob);
            ob->set_paralyzed(random(2),"You are frozen solid!");
        }
        else {
            write("You give "+ob->query_cap_name()+" a terrible %^CYAN%^chill%^RESET%^.");
            message("info", tp->query_cap_name()+" gives you a terrible %^CYAN%^chill%^RESET%^.", ob);
            say(tp->query_cap_name()+" gives "+ob->query_cap_name()+" a terrible %^CYAN%^chill%^RESET%^.", ob);
        }
        ob->damage(dam/5 + (random(this_player()->query_level()/2)));
        tp->add_hp(dam/10);
        ob->add_sp(-dam/8);
        tp->add_sp(dam/12);
        ob->add_mp(-dam/8);
        tp->add_mp(dam/12);
    }

    this_player()->add_skill_points("breath", dam/5);
    tp->add_sp(-dam/7);

    return 1;
}

int abil() {
   object o;
   o = this_player();
   if (!o) return 0;
   if (o->query_class() != "dragon") return 0;
   if (o->query_skill("breath") < 25) return 0;
   if (o->query_level() < 10) return 0;
   return 1;
}

void help() {
   write("Syntax: <breathe [living]>");
   if (this_player()->query_race() != "dragon") {
      write("Not a pleasant experience for the likes of you.");
      return;
   }
   write("This attack sends a breath weapon against your enemy. "
         "this could be anything from a blast of fire to "
         "a mighty wind.");
}
