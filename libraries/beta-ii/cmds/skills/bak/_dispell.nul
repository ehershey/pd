//       _dispell.c
//      Monk and Cleric ability
//      written 151092 by Descartes of Borg
#include <std.h>
#include <daemons.h>
inherit DAEMON;
int spell();
string type() { return "attack"; }
int dispell_all(object tp);
int cmd_dispell(string str) {
    int which, skip, i, faith, wisdom, cost;
    string whom, cl;
    object tp, ob;
    object *inv;
    if (!spell()) {
        return 0;
    }
    this_player()->set_magic_round();
    if(!str) {
        if(!(ob=(object)this_player()->query_current_attacker())) {
            notify_fail("Dispell whom?\n");
            return 0;
        }
    }
    tp = this_player();
    if((cl = (string)this_player()->query_subclass()) != "monk" &&
      cl != "cleric"  && cl !="paladin" && cl != "blue" && cl != "white") {
        notify_fail("You feel confused.\n");
        return 0;
    }
    if(!alignment_ok(this_player())) {
        notify_fail("You have betrayed the source of your powers.\n");
        return 0;
    }
    if (tp->query_disable())
        return notify_fail("You are busy.\n");
    if(tp->query_ghost()) return notify_fail("You cannot do that in your current form.\n");
    if(tp->query_casting()) return 1;
    if(environment(tp)->query_property("no magic")) {
        notify_fail("Something is blocking your concentration.\n");
        return 0;
    }
    if(str == "all") return dispell_all(tp);
    if(!ob) ob = present(str, environment(tp));
    if(!ob) {
        inv = all_inventory(environment(tp));
        sscanf(str, "%s %d", whom, which);
        for(i=0, skip = 0; i<sizeof(inv) && !ob; i++) {
            if(inv[i]->id(whom)) {
                skip ++;
                if(skip == which) ob = inv[i];
            }
        }
        if(!ob) {
            notify_fail("Dispell whom?\n");
            return 0;
        }
    }
      if (ob == tp)
        return notify_fail("You cannot attack yourself.");
    if(!living(ob)) {
        notify_fail(ob->query_cap_name()+" is not a living thing!\n");
        return 0;
    }
    if(cl == "kataan" && (int)ob->query_alignment() < 0) {
        write(ob->query_cap_name()+" is not good!\n");
        tp->add_alignment(10);
        tp->add_mp(-5);
        return 1;
    }
    else if(cl != "kataan" && (int)ob->query_alignment() > 0) {
      write(ob->query_cap_name()+" is not evil!\n");
      this_player()->add_alignment(-10);
      this_player()->add_mp(-5);
      return 1;
    }
    if(!this_player()->kill_ob(ob)) {
        write(ob->query_cap_name()+" can't be attacked by you yet.");
       return 1;
    }
    faith = BALANCE_D->get_damage( tp, ob, 2, ({ "faith" }),
                                   ({ "wisdom" }) );
    cost = faith/7;
    if((int)tp->query_mp() < cost) {
        notify_fail("Too low on magic power.\n");
        return 0;
    }
    tp->set_disable();
    tp->add_mp(-cost);
    tp->set_casting(faith);
    say("%^YELLOW%^"+tp->query_cap_name()+" mutters a prayer against enemies of the faith.");
    write("%^YELLOW%^You mutter a prayer against enemies of the faith.");
    tell_room(environment(tp), "%^ORANGE%^"+ob->query_cap_name()+" is struck by the force of "+tp->query_cap_name()+"'s faith!\n", ({tp, ob }) );
    tell_object(ob, "%^ORANGE%^You are struck by the force of "+tp->query_cap_name()+"'s faith.");
    write("%^ORANGE%^"+ob->query_cap_name()+" is struck by the force of your faith.");
    tp->add_skill_points("faith", faith/20);
    return 1;
}
int dispell_all(object tp) {
    object *inv;
    mixed *who;
    int faith, wisdom, i, cost, tot;
    who = ({});
    faith = (int)tp->query_skill("faith");
    tot = faith;
    if(faith < 20) {
        notify_fail("Your faith is not strong enough.\n");
        return 0;
    }
    inv = all_inventory(environment(tp))-({tp});
    if((string)this_player()->query_class() == "kataan") {
      for(i=0; i<sizeof(inv); i++)
        if(living(inv[i]) && (int)inv[i]->query_alignment()>0) who+=({inv[i]});
    }
    else {
      for(i=0; i<sizeof(inv); i++) {
          if(living(inv[i]) && (int)inv[i]->query_alignment() < 0) who += ({ inv[i]
});
      }
    }
    if(who == ({})) {
        if((string)this_player()->query_class() == "kataan")
          write("Nothing good around here!\n");
        else write("Nothing evil around here!\n");
        tp->add_mp(-5);
        return 1;
    }
    for(i=0; i<sizeof(who); i++) {
        faith = BALANCE_D->get_damage( tp, who[i], 2, ({ "faith" }),
                                   ({ "wisdom" }) );
        faith = faith/sizeof(who);
        if(sizeof(who) > 2)
          faith = faith*2;
        cost = faith/3;
        if((int)tp->query_mp() < cost) {
                notify_fail("Too low on magic power.\n");
                return 0;
        }
        if(!this_player()->kill_ob(who[i])) {
            write(who[i]->query_cap_name()+" can't be attacked by you yet.");
            continue;
        }
        tp->add_mp(-cost);
        who[i]->damage(-faith);
        write(who[i]->query_cap_name()+" is struck by the force of your faith.\n");
        tell_room(environment(tp), who[i]->query_cap_name()+" is struck by the force of "+tp->query_cap_name()+"'s faith.\n", ({ who[i], tp }));
        tell_object(who[i], "You are struck by the force of "+tp->query_cap_name()+"'s faith.\n");
        tp->add_skill_points("faith", faith/20);
    }
    tp->set_casting(faith/8);
    tp->set_disable();
    return 1;
}
void help() {
    write("Syntax: <dispell [enemy]> or <dispell all>\n\n"
      "This prayer of faith does damage to the enemies of your faith.\n"
      "It naturally taxes you more to cast upon on all enemies in a room\n"
    );
}
int spell() {
   object tp;
   tp = this_player();
   if (!tp) return 0;
   if (tp->query_class() == "dragon" && tp->query_skill("faith") > 40) return 1;
   if (tp->query_subclass() != "cleric" && tp->query_subclass() != "monk" &&
       tp->query_subclass() != "paladin")
     return 0;
   if (tp->query_subclass()=="paladin") return 1;
   if (tp->query_level() < 7) return 0;
   if (tp->query_skill("healing") < 1) return 0;
   return 1;
}
