#include <daemons.h>
inherit DAEMON;
int abil();
int cmd_whip(string str)
{
    int a,b, i, *clear;
    string target_thing;
    object ob;
    object *wield;
    if (!abil()) {
	return 0;
    }
    if ((!str || str=="") && !this_player()->query_current_attacker())
    {
	write("Whip what?");
	return 1;
    }
    if (environment(this_player())->query_property("no attack"))
    {
	write("Greater powers prevent your malice.");
	return 1;
    }
    if(this_player()->query_rest_type()) {
	write("You are not in a position to whip anyone!");
	return 1;
    }
    if(this_player()->ghost())
	return notify_fail("But you're already dead!\n");
    if(!b=sizeof(wield=(object *)this_player()->query_wielded())) {
	notify_fail("You need a weapon to whip with!\n");
	return 0;
    }
    i = sizeof(wield);
    clear = ({});
    while(i--)
	clear += ({0});
    i = sizeof(wield);
    while (i--) {
	if (wield[i]->query_type() == "flail")
	    clear[i] = 1;
    }
    i = sizeof(wield);
    if (!(member_array(1, clear)+1))
	return notify_fail("You need a flail type weapon to whip with!\n");
    if (this_player()->query_current_attacker()) 
	ob = this_player()->query_current_attacker();
    else {
	ob = present(str, environment(this_player()));
	if (!ob)
	{
	    write("You dont see that.");
	    return 1;
	}
	if (ob==this_player())
	{
	    write("Something must be wrong with you.");
	    return 1;
	}
    }
    if (this_player()->query_sp() < 20) 
    {
	write("You are too tired to whip anything.");
	return 1;
    }
    if(this_player()->query_disable()) return 1;
    if(!this_player()->kill_ob(ob)) {
	write(ob->query_cap_name()+" can't be attacked by you yet.");
	return 1;
    }
    this_player()->set_disable();
    if (b > 1)
	if (this_player()->query_skill("attack") < random(80))
	    b = 1;
    while(i--) {
	if(b > 2) {
	    if(random(3) == 0)
		b--;
	    if(random(10) == 0)
		b--;
	}
	if(!clear[i]) continue;
	if(b < 1) continue;
	b--;
	if(this_player()->query_arena())
	    if(!present(ob->query_name(), environment(this_player())))
		return 1; 
	a = BALANCE_D->get_damage( this_player(), ob, 2, ({ "attack", "flail" }),
	  ({ "strength" }) ) + wield[i]->query_wc()*5/3;
	a = a / 2;
	if (a < 10)
	{
	    write("You attempt to whip "+ob->query_cap_name()+", but "
	      "miss!");
	    message("info", this_player()->query_cap_name()+" attempts "
	      "to whip you, but misses.", ob);
	    message("info", this_player()->query_cap_name()+" attempts "
	      "to whip "+ob->query_cap_name()+" with "+
	      a_or_an(wield[i]->query_name())+" "+
	      wield[i]->query_name()+", but misses.",
	      environment(ob), ({ this_player(), ob }));
	}
	message("info", "With a quick stroke, you whip "
	  +ob->query_cap_name()+" with your "+
	  wield[i]->query_name()+".", this_player());
	message("info", "With a quick stroke, "+this_player()->query_cap_name()+
	  "whips "+ob->query_cap_name()+" with "+this_player()->query_posessive()+
	  wield[i]->query_name()+"!", environment(this_player()), ({ this_player(), ob }));
	message("info", "With a quick stroke,"+this_player()->query_cap_name()+
	  " whips you with "+this_player()->query_posessive()+" "+
	  wield[i]->query_name()+"!", ob);
	target_thing = (string)ob->return_target_limb();
	ob->do_damage(target_thing, a);
        this_player()->add_sp(-(a/7));
    }
    return 1;
}


int abil() {
    object o;
    o = this_player();
    if (!o) return 0;
    if (o->query_subclass() != "warrior") return 0;
    if (o->query_skill("flail") >= 10)
	return 1;
}


void help() {
    write("
Syntax: <whip [living]>
By use of this ability, one uses a flail type weapon to
whip at a living opponent.
");
}

