#include <std.h>
inherit DAEMON;
mapping waiting;
int abil();
string type() { return "defense"; }
void create()
{
    waiting = ([]);
}
int query_waiting(object ob) { return waiting[ob]; }
int cmd_wrap(string str) {
    object ob;
    int time;
    
    if (!abil()) {
        return 0;
    }
    ob = this_player();
     if(!str)
        time = 1;
    else
        if(sscanf(str,"%d",time) != 1) {
            notify_fail("Syntax: <wrap [time]>\n");
            return 0;
        }
    if(time > 40)
        time = 40;
    
  /*
    if(!ob->query_current_attacker()) {
        notify_fail("You have no need to wrap yourself with your tail.\n");
        return 0;
    }
  */
    
    if (waiting[ob]){
        write("You already have your tail wrapped around you.\n");
        return 1;
    }

    if (this_player()->query_disable())
        return notify_fail("You are too busy to wrap your tail around you.\n");
    
    ob->add_magic_protection( ({ 0, ob->query_skill("tail")/20+random(2)+1, time}) );
    ob->add_skill_bonus("defense", ob->query_skill("tail"), time);
    ob->add_skill_bonus("tail", -(ob->query_skill("tail")*2/3), time);
    ob->add_combat_round_bonus(-5, time);
    
    write("You wrap your tail around you protectively.");
    message("info", ob->query_cap_name()+ 
        " wraps "+ob->query_possessive()+" tail around "+ob->query_objective()+"self.", environment(ob), ob);    
    waiting[ob] = time;
    ob->set_disable();

    call_out("wrap_off", time, ob);

    return 1;
}
void wrap_off(object ob) {
    if (!ob) return;
    message("info","You unwrap your tail from your body.",ob);
    message("info",ob->query_cap_name()+" unwraps "+ob->query_possessive()+" tail from "+ob->query_possessive()+" body.",environment(ob),ob);
    map_delete(waiting, ob);
}

void help() {
    write("Syntax: <wrap [time]>\n\nDragons are able to wrap their tail around their body, protecting them from attacks. Unfortunately, they are unable to attack with their tail in the way.\n");
}

int abil() {
   object o;
   o = this_player();
   if (!o) return 0;
   if (o->query_race() != "dragon")
     return 0;
   if (o->query_skill("tail") >= 5*13) return 1;
   return 0;
}


