#/daemon/letter.c
__Letter "// Sakura + Kumi #include <std.h>#define FREEZER \"/d/nopk/standard/freezer\" inherit WEAPON; void init() {    ::init();    add_action(\"fling\", \"throw_func\");} void create() {    ::create();    set_id(({\"projectile\"}));    set_name(\"projectile\");    set_short(\"Name of projectile\");    set_long(\"Long desc.\");    set_mass(1);    set_value(1);    set_wc(1);    set_type(\"projectile\");    set_hands(2);    set_wield(\"You wield it.\");    set_unwield(\"No more!\");} int throw_func(string str) {    string person;    object ob;    object *weaps;    int i;    int tmp;    if(!str || str == \"\") return notify_fail(\"Throw it at who?\\n\");    if(!sscanf(str, \"projectile at %s\", person))	return notify_fail(\"At who?\\n\");    if(!present(this_object(), this_player())) 	return notify_fail(\"It must be in your inventory to throw it!\\n\");    weaps = this_player()->query_wielded();    for(i=0, tmp = sizeof(weaps); i<tmp; i++) {        if(weaps[i] != this_object()) {return 0; write(\"You must wield it to throw it.\");}    }    ob=find_living(person);    if(!ob) return notify_fail(\"Who? I can't find them.\\n\");    message(\"info\", \"You throw the projectile!\", this_player());    message(\"info\", this_player()->query_cap_name()+\" throws the projectile at \"+ob->query_cap_name()+\"!\", environment(this_player()), ({this_player(), ob}));    message(\"info\", this_player()->query_cap_name()+\" throws the projectile at you!\", ob);    this_object()->move(FREEZER);    call_out(\"pass\", 3, ob, this_player());    return 1;} void pass(object ob, object tp) {    int i;    if(!tp || !ob) return;    if(!present(tp, this_object()) || !present(ob, this_object())) {     message(\"info\", \"You miss!\", tp);     this_object()->move(environment(ob));     return 0;}    else{        message(\"info\", \"You hit!\", tp);        message(\"info\", \"You're hit with a giant bloody projectile! Crikey!\", ob);        tell_room(environment(ob), ob->query_cap_name()+\" is struck with a projectile!\", ({tp, ob}));        this_object()->move(ob);        return;}}"
__Undeleted ({"kumi",})
