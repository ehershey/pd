#/daemon/letter.c
__Letter "Introduction to Computer Science Section 04 Fall 2008_____________________________________________________________________________CS 160 – Laboratory Exercise 3Monologues and DialogsAssignment for the week of September 15thDue: September 19th********************************************************In this lab you will practice• the definition of a Java class,• using import statements,• using the Scanner class methods for console input,• using the JOptionPane class methods for GUI (dialog box) input and output,• conversion of numeric strings to numerical values,• using String class methods for more string manipulations.********************************************************Submit: Upload the source code for the project to Blackboard using the “assignments”part of your CS160 account. The TA will run the code to verify that it all works properly._________________________________________________________________________Create a project lab3 and in it a package Lab3. In the Lab3 package, create a class namedIOPractice1.1. Declare following local data fields.- number of type int- real of type double- typingUnit of type char- message of type String2. Instantiate a Scanner class object which will be able to read data from the console window. Asa class object, it will have to be static.Use a suitable prompt to solicit user input on the console for each data field. (For instance “Enteran integer value:”). As the user supplies the input values, assign them to the data fields. (Hint: Alittle extra care is needed when you handle the char input.3. Create an output message that contains a listing of all your datafields and their values. Use theshowMessageDialog() method of the JOptionPane class to display your ouput messageon the screen. See an example below.4. In the Lab3 package, create a second class named IOPractice2.5. Repeat the data collection and reporting from 2. and 3. above. But this time, use theshowInputDialog() method of the JOptionPane class several time to obtain the input to allof your data fields.Of course, this time you will need to convert the numeric strings and the character string read tonumerical and character values respectively for the output.6. Zip up your classes and submit them."
__Undeleted ({"nulvect",})
