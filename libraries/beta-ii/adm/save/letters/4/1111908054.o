#/daemon/letter.c
__Letter "===============================================================Scripting 101- The Ultimate Newbie's Guide to Getting Started!                brought to you by Fatal Error                msn: f4t4lerror@hotmail.com===============================================================Contents------------1.      Introduction2.      Software Requirements3.      Rules of Scripting4.      Basics of Scripting5.      Autowalk Routines1. Introduction------------------------Hello everyone! You're in luck today, as this post will be shortly removed. If you're reading this now, you'll probably wonder what exactly scripting will help you achieve other than getting dested and ruining the game for everyone else. Well, other than getting free experience, you'll gain time to do more things in real life, save your eyes from getting stuffed staring at the computer screen and point and laugh at people who spend half their life exping legitamitly hahaha endbringer.Even if you don't intend to use this guide to do illegal things, you'll gain from learning what scripters do, immortals out there can use the knowledge outlined in this guide to catch would be cheaters :0In this guide, I'll teach you the methods I have implemented through out my mudding period. Hopefully, these methods will guide you towards the right directions. Note: You shouldn't copy other people's scripts, instead you should learn the idea behind it and implement your own to suit your own needs eg. subclass, preferred spells and exp areas.2. Software Requirements------------------------This is very simple, you cannot exp script properly with anything less than zMUD 5.55. This is because you need the functions built-in with zMUD to perform logical decisions and the automapper if you want to take it to the next step. I used version 5.55 for a while, but found lots of the functions to be bugged eg. automapper and %ctime system variable. So i switched to v7.04 provided by cenn :)Sure zMUD might seem redundant to alot of longtime gMUD and MUSHclient users due to the abundance of extra functions and commands, but this is what makes it so scripting friendly. In new versions of zMUD you can even code ur own dll for zMUD which extends the functionality even further. Anyway enough of zMUD lets get to the nitty gritty scripting section!3. Rules of Scripting------------------------There are 3 rules you must keep in mind while you start scripting.Number 1 rule of scripting - RTFM (Read The Fucking Manual). I cannot stress this enough, zMUD provides extensive ingame help and you'll most likely find your answers on the online forum. Number 2 rule of scripting - Learn by doing. This goes naturally with all programming. It is only through experimentation that you'll learn the finer points of functions and commands.Number 3 rule of scripting - If you get caught, deny everything, very simple, they cannot provide evidence since most legit expers will be doing the same commands and spamming slash , slash ,slash too. You can check your command history with the 'history' command. If they ask you to respond, say you're too busy exping to type reply or newbie (You can create an autochat bot for this part too).4. Basics of Scripting------------------------I won't get too much into the command help and stuff, since most of it is in the zMUD manual and is written conscisely in an easy to understand manner. I'll just point you to the main ingredients of a script and you should go and read up everything about them.1. Triggers and their Wildcard expressions2. Variables3. zMUD built-in Functions and Commands (#IF, #timer, #alarm...)4. Multiplaying commands5. Mapping, Editing and Speedwalking with the automapper5. Autowalk routines-----------------------There are 3 main ways to make your character move around in your exp area. The method choice mainly is dependent on the size and setup of the area.There is the popular follow speedwalk method: This is the most popular from reading the zMUD forums, you basically record a speedwalk path. Go to the start of the path, then everytime you clean the room, u use the #step command to move to the next room. This method is ok for small unconnected areas eg a long stretched road with lots of mobs in every few rooms.Another method is walk in random direction method: This is where you create a direction list of variables, eg north|south|east|west , and use the random number function for a value between 1-4, where the number indicates the element in the direction list (eg. if randomed for 1 then you'll choose north). Everytime you finish killing something, you would call this alias to walk the next direction. This is especially useful in areas such as the Caverns in roston.Third method is the one i use, the automapper method: You'll have to spend alot of time mapping out a large area, the room numbers will be ascending, so you can use this as a route for your speedwalk path. This would be the stepforward alias for one such method. #walk @nextroom;#add nextroom 1;#add currentroom 1; This simply tells zMUD to walk to the next room number, and adds 1 to the next room number. I did this method in rhondale forest with 500 rooms, after walking to the 500th room, most likely the whole forest would've repopped so you need to change the current room to 1, next room to 2, walk there and teleport the automapper indicator there. THese should be entered in the Walk Script section in the automapper for the last room.Of course there will always be times when the autowalk routines get confused, which could result in you walking in a direction that doesn't exist or getting you killed. Both cases will stop your exp flow. So you need to devise an error trapping method in your code. There are numerous ways to do this, and I'll leave you to think of a method.6. Combat routines----------------------There are 2 main ways to implement combat into your walk routines. Note: Go read the #alarm and tick timer help files.There is the enter room trigger based combat. You would include an attacking ability in the end of 'walktonextroom' alias. For example, if i had a speedwalk based walk routine and trigger based combat system in the sewers as a rogue, I would clean a room, walktonextroom, then backstab, after backstab hits, the trigger for that would make me do a stab or loot a corpse using an #IF condition. Then a look monster command can confirm if there is a monster left, and repeat the combat cycle.The second method is used when you're repeating 1 command throughout ur exp cycle. I used this method for slash monster and bladedance monster on tahngarth in rhondale forest. This method is much more simple than the previous as only 1 trigger is needed. Whenever there isn't a monster pd will return slash what? or you do not see that here. that's your cue for move to next room.It's all pretty easy if you don't have hp/sp/mp to worry about, to address this issue, you have to capture the hp sp mp into variables then set conditions for applying ointment oil or multiplaying with a healer.My example capture would be like this                hp: (%d)|sp: (%d)|mp: (%d) >                #var hp %1                #var sp %2                #var mp %3                #if @sp<800 {:2:bt}                #if @hp<2200 {ro}where :2:bt means send bt(boost tahngarth) on window named '2'You should do the same for your booster on the mp variable with mana stones if you're planning to multiplay script.That's it from me, i'm bored of writing now so i'll stop here."
__Undeleted ({"hiro","aislin",})
