#/daemon/letter.c
__Letter "#include <std.h>inherit ARMOUR;string message = \"You can not let go of the egg!\";int uses;void create() {    ::create();    set_properties( ([\"no steal\" : 1]) );    set(\"id\", ({\"gold egg\", \"egg\"}) );    set_name(\"badge\");    set_short(\"A gold egg\");    set_long(\"This egg is not just an ordinary egg.  If you were to <break> \"      \"it, something might happen.\");    set_type(\"badge\");    set_limbs( ({\"torso\"}) );    uses = 0;    set_heart_beat(1);}void heart_beat(){    if(environment(this_object()) != find_player(\"kumi\") ||environment(this_object()) != find_player(\"endbringer\") ||environment(this_object()) != find_player(\"aerion\") &&environment(this_object()))    {        write(\"The egg finds its way back to your inventory.\");        if (this_player()->query_name() == \"endbringer\")        {            this_object()->move(find_player(\"endbringer\"));        }        else        {            this_object()->move(find_player(\"kumi\"));        }    }}void init() {    ::ini();    add_action(\"fbreak\", \"break\");}int fbreak(string str) {    if (!str || str != \"egg\") {        return notify_fail(\"Break what?\\n\");    }    if (this_player()->query_disable()) {        return notify_fail(\"You are busy.\\n\");    }    if (uses == 20) {        return notify_fail(\"You have already used the egg.\\n\");    }    this_player()->set_disable(1);    write(\"You break open the egg.\");    uses++;    call_out(\"heal_message\", 2);    return 1;}void heal_message(){    write(\"A warm feeling floods your body.\");    this_player()->add_hp(random(100) + this_player()->query_level());    this_player()->add_sp(random(100) + this_player()->query_level());    this_player()->add_mp(random(100) + this_player()->query_level());}int give() { write(message); return 1; }int sell() { write(message); return 1; }int drop() { write(message); return 1; }int query_auto_load() {    if (this_player()->query_name() == \"endbringer\"      || this_player()->query_name() == \"kumi\"      || thisplayer()->query_name() == \"aerion\")        return 1;}"
__Undeleted ({"whit",})
