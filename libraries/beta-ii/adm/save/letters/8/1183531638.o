#/daemon/letter.c
__Letter "#include <std.h> // damage ability or spell#include <daemons.h>inherit DAEMON;// define requirementsint abil() { return 1; }int spell() { return 1; }// returns the section under abilitiesstring type() { \"return attack\" }void help() { message(\"help\", \"Text\"), this_player() }// set up a list of checksint can_cast(object tp, object tgt) { if (!tp->ok_to_kill(tgt)) return notify_fail(\"You cannot attack that.\\\");}// requires weapon type int can_cast(object tp, object tgt, object *weps) { }// not an attackint can_cast(object tp) { }int cmd_stab(string str) {     if (!abil) return 0;     if (str) tgt = present(str, environment(this_player()));    else tgt = this_player->query_current_attacker();    if (!can_cast(tp, tgt)) return 0;}// calculate damagedmg = BALANCE3_D->get_damage(tp, tgt, rank, skills, STATS, EXTRA );tp = player doing the attacktgt = thing being hitrank = strength of the attack (1-4)rank 1 = level 1-15rank 2 = 15-30rank 3 = 30-45rank 4 = 45+first array = skill check (add in multiple times for more weight)second array = stat checkthird array = extra stats/skills (completely ignored if rank < 3)abilities = statsspells = skills// sp costdmg/9 (expensive) - dmg/13 (cheap)// check if player has enough spif (tp->query_sp() < cost) return notify_fail(\"You are too tired.\\n\"); (!tp->kill_ob(tgt)) return notify_fail(\"You cannot attack \"+tgt->query_cap_name()+\".\\n\");// use in can_castif (!tp->ok_to_kill(tgt))// no idle rounds, cannot leave room, does a magic hit and damage next round tp->set_casting(dmg);// idle rounds, cannot leave room, have to do your own damagetp->set_disable(1); // can be used for anythingtp->set_magic_round(1);// use only if absolutely necessarytp->set_paralyzed(2, \"You cannot move.\", \"You can move again.\");"
__Undeleted ({"nulvect",})
