#/daemon/letter.c
__Letter "OK heres the psudocode for what i have in mind.mapping staff_control=([]);mapping guild_control=([]);Now what happens is there will be a staff only room with the commandsto take an item (lets say a diamond) and set the pricing for it. Thisis the raw MINIMAL price that we the staff feel is acceptable for thatitem. Say 2 mill gold for a diamond. What happens is the pairing of\"diamond file_path\":staff_price gets stored into the staff_controlmapping. This would prevent someone curcomventing the AL rules orrather they would be BUYING the object to get it back OUT of thestorage.The guild_control is for the guild masters to add to the raw_pricethat is setup in staff_control. Say the staff sets a diamond at2 million, the masters set it at 3 mill.the 3 mill is the selling price now on diamonds. They can NOTset their pricing BELOW the staff_control prices. (( A thoughtalso would be having the staff_control price subtracted from theguild_control pricing. Meaning the guild would get 1mill in thistransaction. 3m (guild_control price) - 2m (staff_control price )Thinking the staff_control pricing could be a tax or tariff onthe rarer and harder to get objects :)in summary;mapping staff_control=([]); mapping guild_control=([]);string file_targ; int staff_price; int guild_price;object target;        file_targ = file_name(target);        staff_control = ([ file_targ : staff_price ]);        guild_control = ([ file_targ : guild_price ]);This is just psudocode but im sure ya see what i have in mind from here.Just a matter of sculpting the code around it.=======================================================================Also, I was planning on making the stores be able to sort their inventoryby type. Like if someone wants armours, they can look at just armours.I would also make it so they can look for a specific object.In summary, I would like to develop a whole marketing system for our mudMaking a central economic system for us. You know i can pull off the codeif i put my mind to it :) I just need the green light to start testingthis out. I know you will be pleased with the results of this experiment.Ironman"
__Undeleted ({"daos","ironman","nulvect","stormbringer",})
