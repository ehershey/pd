#/adm/daemon/bboard_d.c
posts ({(["size":955,"date":1175906572,"title":"changes","owner":"nulvect","message":"I changed /std/container.c, and wound up changing a bunch of otherlittle things in /std/ to fix bugs that sprang up from that.I made some commands: open, close, lock, unlockOn another note, I rewrote yell, edit get and put, andhave some more changes to put into lock and unlock.Look got rewritten. I wrote a list command.I'll be fixing up armour.c and vault.c soon, as well as the chat daemonand the filter daemon. I already changed the message class on a bunch ofcommands like say, and have some more changes that need to go into them.I'm also trying to make all the code in living.c, user.c, monster.c,body.c, and combat.c easy to figure out and to add some more functionality.Mainly I'm adding what I call \"hooks\" - basically, a way to intercept functioncalls in living things (without using shadows, which I know are insecure).All that stuff will be very slow in coming, though.Lastly I've been adding more abilities and spells.",]),(["size":765,"date":1176088502,"title":"chat changes","owner":"nulvect","message":"I cleaned up the chat daemon in /daemon/chat.c, moved some stuffinto it from user.c, and moved some other stuff out of it and into/std/user/communication.c. I made changes to user.c to move stufffrom there into communication.c also. I basically disabled the oldfilter daemon (put in a return 0), and put in /daemon/censor_d.cto replace it as a single universal filtering daemon. It's basedvery much on filter_d.The way it's set up right now, guild lines are not censored, but basicallyall the other lines are. Players can setenv CENSOR_PRIVATE 1 to censorall communications if they want. Say, speak, emote, and yell are allcensored in public places (currently sub/class halls, tirun square,and the tirun board). Socials are censored the same as emotes.",]),(["size":744,"date":1177731580,"title":"functionality","owner":"nulvect","message":"I've started on splitting up functionality into separate filesin /std/ and /std/living/. I wrote up /std/elemental.c based on theelemental code in living things, but it's made to be used in allthings with elemental strengths or weaknesses. It's not in use yet.I also created /std/living/afflictions.c and /std/living/stealth.cto hold info about negative effects, and stealth. I'll be fullyimplementing them in the very near future.Oh, and I put in /std/living/hooks.c, but it's not in use yet either.The point is to put similar stuff together so it's easy to find andmore modular. I'll be splitting more stuff out later on, includingtaking all the duplicated stuff that's in both monster.c and user.cand putting it into living.c.",]),(["size":534,"date":1178417421,"title":"lib changes","owner":"nulvect","message":"Today I cleaned up the flow between combat.c, living.c,monster.c, and user.c. undead.c also got fixed.Various changes include changing many instances of::somefunc() to living::somefunc() (as an example),and consolidating the code for combat and death sothat it isn't duplicated anymore.I also added a simple set_undead and query_undead functo all mobs and undead.c is kind of redundant now.The last thing to mention is that monsters now havequery_swarm(), set_aggressive(), and query_aggressive(),which were missing before.",]),(["size":551,"date":1178612997,"title":"riding","owner":"nulvect","message":"I added /std/living/riding.c, cleaned up all the coderelated to mounting/riding in living.c, monster.c, user.c,and ride.c. Rewrote the mount, dismount, and buck commands.Added the allow command. Those are all in /cmds/mortal/.Also, added a property for monsters:set_property(\"no monster\", 1);Will make it so a mob does not have \"monster\" as an ID, thisneeds to be set before set_id is done.It is now possible for something to carry more than one personon its back. Currently dragons can carry two people and everythingelse defaults to one.",]),(["size":427,"date":1178692628,"title":"stealth","owner":"nulvect","message":"I changed everything I could think of to use the functions in/std/living/stealth.c instead of using a property called \"stealth\".The main thing to note is that stealth is much easier to \"use up\"to perform an action more stealthily, by doing:livingob->use_stealth(20);It will return the amount of stealth left after using 20, soif (!liv->use_stealth(20)) return notify_fail(\"You are way too loud!\");will work as expected.",]),(["size":857,"date":1179374356,"title":"delay daemon","owner":"nulvect","message":"Ok, so this thing is basically a consolidated way of doing call_out withoutdoing call_out. I don't know if it will turn out to be much of a help, buthere's how to use it:DELAY_D->add_delay(int time, object ob, string func, mixed *args, int load);This sets up a new call in 'time' seconds, of ob->func(arg[0], arg[1], etc).If time is greater than 1 million, it will use it as an exact time in epochformat (the same kind of number time() returns).Args are optional. Load is optional. Load defaults to 1. If you pass a 0 forthe load variable, then the delay daemon will _not_ try to load up the objectif it is not still around at the time to call the func, it will just do nothing.Note that it doesn't make a clone... so it's probably good to pass a 0 if youused this in an item (or from a player or mob).I hope that was all coherent enough...",]),(["size":648,"date":1179901902,"title":"command hook","owner":"nulvect","message":"I just separated out the command hook and search paths from living.c,those functions are now in /std/living/commandhook.c. I cleaned up thecode and also added and changed some functionality.If you want to gag a player, all you need to do now is:call nulvect;set_property;\"gagged\";1And to ungag:call nulvect;remove_property;\"gagged\"(note that set_property;\"gagged\";0 will NOT work)I also implemented an affliction: stupor. It disallows you from casting spells.I have not tested that part much, however.Just in case something cataclysmic happens when I'm not around, living.nul4 canbe copied to living.c and all relevant files updated.",]),(["size":1060,"date":1185139094,"title":"updates","owner":"nulvect","message":"I added /std/periodic_room.c a while back. Inherit as PERIODIC_ROOM.Include this function: int periodic() { do stuff and return 1 or 0; }In create you can set_period(5) to make it go off every 5 heart_beats.If periodic returns 0, it stops being called until init() is called again,usually because someone comes in the room.This uses the delay daemon so that each room does not have its ownheart_beat, only the one delay daemon does, so it should be safe formass use. I have not tested it with several hundred rooms at once though.-----I added /std/seal.c, inherit as SEAL.Lots of stuff can be set in there, best way to understand it is tolook at the code and at the update seals files in:/d/nopk/tirun/obj/misc/seal_blank_new.c and tirun_seal_new.cThe tirun seal is an example of a pre-marked seal.All the messages let you put in $N for the user's name, $R for a listof people riding the user, $L for the label of the seal, and $S forthe current short description of the seal.I changed all vendors I could track down to sell the new files.",]),(["size":93,"date":1187252366,"title":"board bug","owner":"stormbringer","message":"Every time I try to post a copy and paste larger than a few lines I get booted from the mud.",]),(["size":201,"date":1187252562,"title":"RE: bug","owner":"stormbringer","message":"Make that copy and paste anything to the mud that is larger than a few lines. This really limits me if I decide I would like to code or build anything since I do everything in notepad and paste to ed.",]),(["size":88,"date":1187317309,"title":"RE: Stormbringer","owner":"whit","message":"What type of terminal app do you have?  Its possible it may be that freaking out.Whit",]),(["size":177,"date":1187330882,"title":"app","owner":"stormbringer","message":"I use mushclient, the same program I have been using for years. This was not a problem until now, I have always cut and pasted code from notepad to the mud through mushclient.",]),(["size":59,"date":1187373443,"title":"pasting","owner":"nulvect","message":"I'm not having this problem, and I upload files similarly.",]),(["size":329,"date":1194672254,"title":"set_says in monster.c","owner":"nulvect","message":"I added set_says to monster.c at Stormbringer's request.It works just like set_emotes, but the mob will say the lines,so you want something like this:set_says(5, ({ \"I like cheese.\", \"Go away.\" }), 0);And every heartbeat the mob has a 5% chance of saying one of those lines.The 0 is for not in combat, 1 is for in combat.",]),(["size":286,"date":1200102401,"title":"mapper daemon","owner":"nulvect","message":"I made a very minor change to the mapper daemon so you can send a room objectto the mapper() function and not just living objects.I also made the perform_pre_exits and perform_post_exits functionsin /std/room/exits.c non-static... they were static before but I needed to call them.",]),(["size":427,"date":1200455431,"title":"terminal + mapper daemons","owner":"nulvect","message":"I added an entry to the terminal daemon called \"wrap\", it's usedjust for wrapping colored text.I finished and put in a new mapper daemon. It should be significantlyfaster than the old one.Changes coming very very soon: editing a few simulefuns to use thenew way I've come up with for easily formatting colored strings,making room.c cache its mapped descriptions so maps aren't remadeevery time someone looks in a room",]),(["size":126,"date":1202506227,"title":"minor body.c addition","owner":"nulvect","message":"I added a remove_wielding_limb() to body.c, since we didn't have one.It just sets a limb so it can no longer wield a weapon.",]),(["size":87,"date":1209445741,"title":"gags","owner":"nulvect","message":"I'm adding a time to the gag command, but it doesn't work yet. Will post when it does.",]),(["size":37,"date":1209520578,"title":"re: gags","owner":"nulvect","message":"The time argument for gag works now.",]),(["size":1353,"date":1210691271,"title":"barkeeps, food, drinks","owner":"nulvect","message":"I have updated all of these in /std/. Barkeeps are NOT backwardscompatible, so any new ones will need to be changed. There is nowonly one call to make a menu.set_menu( ([  \"bread\" : ([    \"type\" : \"food\",    \"strength\" : 32,    \"short\" : \"loaf of freshly baked bread\",    \"long\" : \"This bread is fresh out of the oven!\",    \"my_mess\" : \"You gobble down the bread.\",    \"your_mess\" : \"gobbles down some bread.\",  ]),  \"juice\" : MYITEMS+\"juice\",]);That would go in create(). The juice would be loaded from a file,rather than having to specify everything in the barkeep. You can put_any_ other parameters in there besides type, strength, short, etc,the barkeep does foodob->set_strength(32) for example.The drink types are still the same, and \"empty\" : \"a shot glass\" will setwhat the empty container looks like, \"empty\" : MYITEMS+\"shotglass\"also works and will load it from a file.Food.c and drink.c have also been changed but should be fullybackwards-compatible. You can use set_poisoned(30) to make poisoned stuff,the bigger the number the longer poison will last. They also haveset_extra( (: my_func :) ) which will call my_func when you eat it.The item will cease to exist right after that.Oh, one last thing on barkeeps - they automatically add a read_menuto the room they are in, as in you can walk in and \"read menu\".",]),(["size":372,"date":1243366040,"title":"changes","owner":"nulvect","message":"I disabled the copy() sefun, because we have a copy() efun that works better and faster.No code should need to be changed from this.I updated several files in /std/ to fix the bug where dying in a room with nohostile players/monsters made the death not count. I also made it so dying of poisonor bleeding (or in the future any damage-dealing effect) will also count.",]),(["size":500,"date":1245191233,"title":"skills and monster.c","owner":"nulvect","message":"I put in a new skills daemon, /adm/daemon/skills_d.c which uses the header filefrom /adm/include/skills.h. I also changed /std/living/skills.c to work betterand I changed how monsters are initialized in /std/monster.c.As per my post on tirun board, monsters with a class/subclass set will now havethe correct skills for their class, maxed at their current level. Also of noteis that the stats formulas were changed so there's no more float math being used,which should make it a little faster.",]),(["size":160,"date":1278134540,"title":"new room property","owner":"nulvect","message":"If you use set_properties(([ \"no wander\" : 1 ]));, mobs should no longer wanderrandomly into that room. Note that patrolling monsters will still enter though.",]),(["size":654,"date":1278546826,"title":"set_inventory","owner":"nulvect","message":"I have added a set_inventory function for rooms and monsters.set_inventory( ([  \"green_goblin\" : 5,  \"scared_girl\" : 1,]) );That will make the room have 5 goblins and 1 scared girl.set_inventory( ([  \"big_sword\" : \"wield sword\",  \"little_knife\" : ({ 3, \"wield knife\" }),]) );That will make the goblin have a big sword and 3 little knives.He will wield the sword and also the first knife.This is better than having everyone code up reset()s because most ofthe time people don't even know what they're doing, heh. Plus it's a littleeasier than using for loops for multiple things.Note that \"big_sword\", \"green_goblin\" etc are filenames.",]),(["size":1105,"date":1279659045,"title":"virtual map","owner":"nulvect","message":"I believe I have finally finished my virtual map project.The files are in /std/virtual/:virtualmap.c and vmaproom.cI also modified vserver.c and vroom.c in that directory, which are usedfor our old style virtual areas. The vserver.c file is also used for virtualmaps.Please read help vmap for now, and I will have a working example to play in soon.Edit: For the time being, you can look at the stuff in /wizards/nulvect/vtest/If you make an exit in your own workroom that leads to /wizards/nulvect/vtest/0,0,0.cyou can walk around and see how it works.aEdit 2: New area opened, Ridarin. It's in /d/freepk/ridarin/ and isall virtual. I added it to the ocean map as a beach, but not to the sky map.Edit 3: Added an expansion to Ridarin. It's in the same directory and uses the samevirtual daemon, but if you look at the descs file it has two sections now.If anyone wants to continue adding on to this area, feel free. I would eventuallylike to have some kind of village, and maybe some area in the trees,the village would of course not work with the virtual aspect very well though...",]),(["size":642,"date":1280648915,"title":"virtual descriptions","owner":"nulvect","message":"I made an addition to /std/virtual/vserver.c to change how descriptionsare generated for rooms. Now, a room will always have the same description,whereas before it was different every time the room was reloaded.It is on by default, but if you add set_static(0); to your own area server file(the one that inherits VIRTUALSERVER) that will turn it off.I did it by making a hash based on the file name and using the values of eachpiece of the hash... well there's a big comment in vserver.c that explains it.Using this method, the maximum number of sentences is limited to 10; I've neverseen any room with that many though, so it's ok.",]),(["size":775,"date":1291262885,"title":"new sefuns","owner":"nulvect","message":"I added format_columns and format_rows simulefuns.The format_rows() is basically a better version of format_page():format_rows( string *items, int columns, int screenwidth, string separator, string alignment )Will print each string in items from left to right, then top to bottom,with the specified number of columns, with separator between each item.You can specify alignment as \"left\", \"right\", or \"center\" to centertext within each column.columns defaults to 2, screenwidth to 80, separator to two spaces,and alignment to left.format_rows( ({ \"1\", \"2\", \"3\", \"4\", \"5\", \"6\" }), 2) returns:1  23  45  6The format_columns is exactly the same except it prints top to bottom first.format_columns( ({ \"1\", \"2\", \"3\", \"4\", \"5\", \"6\" }), 2) returns:1  42  53  6",]),(["size":779,"date":1293488765,"title":"recipes","owner":"nulvect","message":"The recipe management command has been completed (I think), check out <help recipe>,but I warn that it is a very large help file.If you <recipe list all> you can see some examples of what a few ranger thingswill look like. We need to standardize the entries for type, method, temperatures,and materials (required and prohibited).The idea is that different items in your inventory and your current room willgrant you different methods and temperatures (such as a mortal and pestle,a kettle, a campfire, or a forge). I will also need to set up a standard commandto be inherited by recipe commands like make, brew, build, etc, as well as somecommands to list your known recipes.Input is appreciated, especially in the form of standards for the aforementionedfields...",]),(["size":1123,"date":1296716591,"title":"armour.c weapon.c","owner":"nulvect","message":"I updated armour.c tonight, it has been completely rewritten.It no longer uses add_action for wear and remove, those are separatecommands in the /cmds/mortal dir now. Rings should be handleda little better, there are now extra lines when you look at wornarmour, and people can now wear gloves that have more finger holesthan they have fingers, which lowers the ac by 1 while worn.Lastly, I added set_post_wear_func( (: blah :) ) and a correspondingset_post_remove_func( (: blah :) ) which are only called after thearmour is successfully worn. Before we were doing set_wear( (: blah :) )but we couldn't be sure the armour would successfully be worn.The \"blah\" func is like this: void blah(object wearer) { do whatever; }I updated the event items in /d/custom_items/, the healing ring in/wizards/daboura/healing_ring, and the dull brass armour set in/wizards/daboura/arm/ to use these new functions.Lastly, I may have forgotten to post about it, but I updated weapon.cand added wield and unwield commands the same way a far while ago.I just added the set_post_wield_func and set_post_unwield_func tonight.",]),})
read_by ({({"nulvect","whit","daos","hepualahaole","nightshade","daboura","stormbringer","luna","amun","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"nulvect","whit","hepualahaole","daos","nightshade","daboura","stormbringer","luna","amun","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"nulvect","daos","daboura","whit","nightshade","hepualahaole","stormbringer","luna","amun","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"nulvect","whit","daboura","daos","hepualahaole","nightshade","stormbringer","luna","amun","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"nulvect","daboura","whit","hepualahaole","nightshade","daos","stormbringer","luna","amun","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"nulvect","whit","hepualahaole","nightshade","daos","daboura","stormbringer","luna","amun","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"nulvect","daos","daboura","whit","hepualahaole","nightshade","stormbringer","luna","amun","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"nulvect","whit","stormbringer","daos","daboura","hepualahaole","nightshade","luna","amun","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"nulvect","daboura","whit","stormbringer","daos","hepualahaole","luna","nightshade","amun","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"stormbringer","nulvect","whit","daos","daboura","hepualahaole","luna","amun","nightshade","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"stormbringer","nulvect","whit","daos","daboura","hepualahaole","luna","amun","nightshade","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"whit","daos","nulvect","stormbringer","daboura","hepualahaole","luna","amun","nightshade","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"stormbringer","nulvect","whit","daos","daboura","hepualahaole","luna","amun","nightshade","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"nulvect","whit","daos","daboura","hepualahaole","luna","stormbringer","amun","nightshade","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"nulvect","hepualahaole","amun","stormbringer","whit","daos","luna","nightshade","pyro","kilir","ironman","morvudd","vian","drackmire","frisky","baine",}),({"nulvect","whit","amun","daos","stormbringer","hepualahaole","nightshade","pyro","kilir","ironman","vian","drackmire","frisky","baine",}),({"nulvect","amun","whit","daos","stormbringer","hepualahaole","nightshade","pyro","kilir","ironman","vian","drackmire","frisky","baine",}),({"nulvect","whit","amun","stormbringer","daos","hepualahaole","nightshade","pyro","kilir","ironman","vian","drackmire","frisky","baine",}),({"nulvect","amun","whit","daos","hepualahaole","nightshade","stormbringer","pyro","kilir","ironman","vian","drackmire","frisky","baine",}),({"nulvect","amun","whit","daos","hepualahaole","nightshade","stormbringer","pyro","kilir","ironman","vian","drackmire","frisky","baine",}),({"nulvect","amun","whit","daos","hepualahaole","nightshade","stormbringer","pyro","kilir","ironman","vian","drackmire","frisky","baine",}),({"nulvect","whit","daos","amun","stormbringer","ironman","pyro","hepualahaole","vian","drackmire","frisky","baine",}),({"nulvect","whit","daos","stormbringer","amun","ironman","pyro","hepualahaole","vian","drackmire","frisky","baine",}),({"nulvect","daos","whit","stormbringer","ironman","amun","drackmire","vian","frisky","baine",}),({"nulvect","daos","amun","stormbringer","drackmire","ironman","vian","whit","frisky","baine",}),({"nulvect","daos","ironman","stormbringer","amun","whit","vian","drackmire","frisky","baine",}),({"nulvect","daos","stormbringer","vian","ironman","whit","amun","drackmire","frisky","baine",}),({"nulvect","vian","amun","stormbringer","whit","ironman","daos","frisky","baine",}),({"nulvect","vian","stormbringer","daos","ironman","whit","frisky","baine","amun",}),({"nulvect","vian","stormbringer","ironman","daos","whit","baine","amun",}),})
