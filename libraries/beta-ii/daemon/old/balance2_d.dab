//Objective - To create a more streamlined balance daemon 
// that differentiates between physical and magical attacks.

#include <std.h>

inherit DAEMON;

int get_damage(object tp, object ob, int rank, string *skills, string *stats) {

    int ret, i, tmp;
   //fighter ranks 1-2, 1 is for low level attacks
    if(rank == 1) {
        ret = 0;
        tmp = 0;
        i = sizeof(stats);
        while(i--)
            tmp += tp->query_stats(stats[i]);
        tmp = tmp / sizeof(stats);
        tmp = tmp;
        ret += (int)(3*tmp/2);
        tmp = 0;
        i = sizeof(skills);
        while(i--)
            tmp += tp->query_skill(skills[i]);
        tmp = tmp / sizeof(skills);
        ret += (int)(2*tmp/3);
        ret += random(tp->query_level());
    }//rank 2 is for higher level attacks, relying more on stats than skills.
    else if(rank == 2) {
        ret = 0;
        tmp = 0;
        i = sizeof(stats);
        while(i--)
            tmp += tp->query_stats(stats[i]);
        tmp = tmp / sizeof(stats);
        tmp = tmp;
        ret += tmp*2;
        tmp = 0;
        i = sizeof(skills);
        while(i--)
            tmp += tp->query_skill(skills[i]);
        tmp = tmp / sizeof(skills);
        ret += (int)(tmp);
        ret += random(tp->query_level());
    } //mage ranks3-4, 3 for low level magic attacks
    else if(rank == 3) {
        ret = 0;
        tmp = 0;
        i = sizeof(stats);
        while(i--)
            tmp += tp->query_stats(stats[i]);
        tmp = tmp / sizeof(stats);
        tmp = (int)(2*tmp/3);
        ret += tmp;
        tmp = 0;
        i = sizeof(skills);
        while(i--)
            tmp += tp->query_skill(skills[i]);
        tmp = tmp / sizeof(skills);
        ret += (int)(tmp);
        ret += random(tp->query_level());
    }
    else if(rank == 4) {
        ret = 0;
        tmp = 0;
        i = sizeof(stats);
        while(i--)
            tmp += tp->query_stats(stats[i]);
        tmp = tmp / sizeof(stats);
        tmp = tmp;
        ret += tmp;
        tmp = 0;
        i = sizeof(skills);
        while(i--)
            tmp += tp->query_skill(skills[i]);
        tmp = tmp / sizeof(skills);
        ret += (int)(3*tmp/2);
        ret += random(tp->query_level());
    }
    else {
        message("info", "This ability/spell has an invalid rank "+rank+
          " Please inform an admin or use the <bug> command to report it.",
          tp);
        return 0; // yes, that means it will do 0 damage.
    }
    if(member_array("wisdom", stats) != -1 &&
          member_array("intelligence", stats) != -1)
    {
            ret -= ob->query_skill("magic defense")/2;
            ret -= ob->query_stats("wisdom")/3;
            ret -= ob->query_stats("intelligence")/8;
    }
    else
    {    
            ret -= ob->query_skill("defense")/2;
            ret -= ob->query_stats("dexterity")/3;
            ret -= ob->query_stats("constitution")/16;
            ret -= ob->query_stats("strength")/16;
    }

    if(wizardp(tp))
    {
        message("info", "Damage return for balance 2 = "+(3*ret/2)+"\n", tp);
    }
    return (int)(3*ret/2);

}
