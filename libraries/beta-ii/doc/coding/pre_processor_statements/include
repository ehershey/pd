===============================================================

The #include statement is by far the most common preprocessor command. 
It simply tells the preprocessor to replace that line with the
contents of an entire other file before going any further. 

Data you put in included files is usually data that won't ever
change and that you'll be referencing in several files. Instead of
having to copy and paste the same lines into multiple places and
maintaining multiple copies, you simply collect that data in an
include file and include it in the program files as appropriate. 
 Included file names traditionally end in .h.
There are two types of #include statements as follows;

#include <std.h>
#include "/some_dir/some_header.h"

There are an usually standard include files which may be in any 
of several different directories. Rather than having to remember 
exactly where they are, you can just give the name of the file 
you want to include if it's in a standard include directory.
To do this, you would use the first format using the <> for
brackets around the name of the file.

If you want to include 
files that aren't in the standard include path, for example files
of your own, you have to specify where they are. You can do that 
either relative to the position of the file that uses it or by an 
absolute path. You can do this using the "" for brackets around the
path to the file you wish to include.

-----< Special Note >-----

While it is POSSIBLE to use the #define and #include statements to
assemble files, it is generally discouraged for the following reasons;

1) It is more efficent for the processor to trace declared variables
   as opposed to defined ones. The pre-processor can sometimes barf
   at you cause it found an error but due to it NOT being a declared
   function or variable. It has no idea how to handle said error.

2) Included code is very hard for the preprocessor to debug. If you
   include and/or define code using this method, LPC will have a hard
   time letting you know if/when an error occured.

3) Please limit the use of #define to a single variable for the above
   reasons.

4) ABSOLUTELY DO NOT INCLUDE FUNCTIONS using the #include statement.
   It is much cleaner and more efficent to use inheritance instead.

======================================================================

The general accepted practice for #include is to use it to add a
list of #define statements to a file, commonly called a header file.


Ironman
