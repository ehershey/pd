void catch_tell(string str) { }

Whenever anything is done in a room, like you give bozo a flower, the function
tell_object is used to tell:
you: You give Bozo a flower.
Bozo: Descartes gives you a flower.
anyone else in the room: Descartes gives Bozo a flower.

The string given by tell_object() to a monster will go to the function
catch_tell if it exists in the monster, so that, if Bozo is a monster, then
str in our catch tell: str = "Descartes gives you a flower."
inside catch_tell, you can do whatever you want with this string, the most
common user is to use a function called sscanf() to search for keywords in
the monster.  I am adding a function to monster.c called interact
usage: interact(str1, str2);
If str1 is in str2, the the function will return 1, if not 0;
So we could test to see if Bozo is getting a sword by the following:
if(interact("gives", str)) {
    if(interact("you", str)) {
	if(interact("sword", str)) {
		if(present("sword")) tell_room(environment(this_object(), "Bozo says: Thank you!\n");
	}
    }
}

You need to check in the case of gives that it was actually a giving, and no
emote was used.  Make sure you do not have the monster respond by teling
a phrase that would in turn cause it to respond again.  You can always
exempt the monster from being told what you are telling the room with the
following syntax:

tell_room(environment(this_object()), string_to_be_told, ({ this_object() }) );

Please note that I put a syntax error in my tell room in the Bozo example.
there is a missing ).  But the tell_room example I just gave is correct.

Please see /doc/efun/tell_room, /doc/lfun/catch_tell, /doc/lfun/interact,
/doc/efun/tell_object


			-Descartes of Borg 920928
modified 930822
