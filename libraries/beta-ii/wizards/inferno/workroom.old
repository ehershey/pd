#include <std.h>
#include <daemons.h>
inherit ROOM;

int access = 1;
string *boards = ({
"forge_ideas",
"slink_ideas",
"newbie",
"main_board",
"immortal",
"arlon_board",
"stone_wall",
"planning",
"arch",
"law",
"coding",
"ombud",
"kataan_board",
"rogue_board",
"monk_board",
"mage_board",
"cleric_board",
"antipaladin",
"paladin",
"ranger",
"soldier",
"warrior",
"knight",
"conj",
"druid",
"necro",
"pyro",
"sorc",
"wizard",
"jester",
"theif",
"assassin",
"monk_dark",
"monk_light",
"spell",
"lodos_town",
"roston_board"
});
int x = 0;
object ob;

void create() {
 ::create();
   set_long("%^BOLD%^%^BLACK%^You find yourself within the folds of "
      "reality as it is known. You see that which mortals call%^WHITE%^ "
      "time%^BLACK%^ before you.%^RESET%^%^ORANGE%^ An overwhelming heat emenates "
      "from the mighty forge here.%^RESET%^");
   set_listen("default", "The pounding of a hammer can be heard.");
   set_short("%^ORANGE%^Within the folds of reality%^RESET%^");
   set_exits(([ "out" : "/d/standard/square.c",
         "lodos" : "/d/lodos/square",
                "storm" : "/wizards/inferno/storm/room/path1" ]));
   ob = new(BBOARD);
   ob->set_name("forge");
   ob->set_location("/wizards/inferno/workroom");
   ob->set_id( ({ "board", "forge", "iron board" }) );
   ob->set_board_id("forge_ideas");
   ob->set_max_posts(50);
   ob->set_short("an iron board");
   ob->set_long("The iron forge of Inferno. <next> to next board, and "
      "<back> will make this the iron forge again.");
}

int next() {
   int i, read, total, diff;

   diff = 0;
  while(!diff) {
   i = x + 1;
   if (i >= sizeof(boards)) {
     x = 0;
     write("%^YELLOW%^You are now reading: %^RESET%^forge_ideas%^YELLOW%^ "
       "by default.");
     tell_room(environment(this_player()), "%^YELLOW%^The board is now set to: "
       "%^RESET%^forge_ideas%^YELLOW%^ by default.", ({ this_player() }));
     diff = BBOARD_D->get_num_read(boards[x], this_player()->query_name());
     diff -= BBOARD_D->get_num_posts(boards[x]);
     break;
   }
   else x++;
   if (!total = (int)BBOARD_D->get_num_posts(boards[x])) continue;
   read = (int)BBOARD_D->get_num_read(boards[x], this_player()->query_name());
   diff = total - read;
   if (read == total) continue;
   if (total == 0) continue;
  }
   write("%^YELLOW%^You are now reading:%^RESET%^ "+boards[x]+" ("+(string)diff+").");
   tell_room(environment(this_player()),
      "%^YELLOW%^The board is now set to: %^RESET%^"+boards[x]+".",
      ({ this_player() }));
   ob->set_board_id(boards[x]);
   return 1;
}

int back() {
   write("%^YELLOW%^You are now reading:%^RESET%^ forge_ideas.");
   tell_room(environment(this_object()),
      "%^YELLOW%^The board is now set to:%^RESET%^ forge_ideas.");
   ob->set_board_id("forge_ideas");
   x = 0;
   return 1;
}

void query_access() {
   if (!access) write("Dragon Lord Inferno only.");
   else write("All others allowed.");
}

int set_access(int i) {
   if (this_player()->query_name() != "inferno") {
      write("Access denied.");
      return 1;
   }
   access = i;
}

void reset() {
 ::reset();
   if (!present("keg"))
      new("/wizards/inferno/item/keg")->move(this_object());
   if (!present("board"))
      new("/wizards/inferno/board")->move(this_object());
}

mixed init() {
  ::init();
    if(this_player()->query_name() != "inferno" && !access)
{
      write("Access denied.");
      this_player()->move("/d/standard/square");
      return 1;
  }
   add_action("toggle", "toggle");
   add_action("next", "next");
   add_action("back", "back");
   add_action("ready", "ready");
}

int ready() {
   object ob, tp;
   tp == this_player();
   if (this_player()->query_name() !="inferno") return 0;
   write("You are mystically readied.");
  if (ob = present("infrobe", this_player()))
   ob->remove();
   new("/wizards/inferno/item/robe")->move(this_player());
  if (ob = present("infhammer", this_player()))
   ob->remove();
   new("/wizards/inferno/item/hammer")->move(this_player());
  if (ob = present("foobar", this_player()))
   ob->remove();
   new("/wizards/inferno/item/foo")->move(this_player());
  if (ob = present("oi", this_player()))
   ob->remove();
   new("/wizards/inferno/oivay")->move(this_player());
  if (ob = present("box", this_player()))
   ob->remove();
   new("/wizards/seeker/box")->move(this_player());
   return 1;
}

int toggle() {
   if (this_player()->query_name() != "inferno") {
      write("Access denied.");
      this_player()->move("/d/standard/square");
      return 1;
   }
   if (!access) {
      access = 1;
      write("All others now allowed.");
      return 1;
   }
   access = 0;
   write("Only High Dragon Lord Inferno allowed.");
   return 1;
}
