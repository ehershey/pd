#include <std.h>
#include <daemons.h>
inherit ROOM;

int access = 1;
string *boards = ({
"spell_idea",
"newbie",
"main_board",
"immortal",
"planning",
"arch",
"law",
"coding",
"ombud",
"kataan_board",
"rogue_board",
"monk_board",
"mage_board",
"cleric_board",
"antipaladin",
"paladin",
"ranger",
"soldier",
"warrior",
"knight",
"conj",
"druid",
"necro",
"pyro",
"sorc",
"wizard",
"jester",
"theif",
"assassin",
"monk_dark",
"monk_light",
"spell",
"lodos_town",
"roston_board"
});
int x = 0;
object ob;

void create() {
 ::create();
    set_properties( ([ "light" : 2, "indoors" : 1]) );
    set_short("You'll never guess >:)");
    set_long(
    "A Big hole in the world called home."
    );
    set_name("Storm workroom");
    set_smell("default", "Ozone fills your nostrals.");
    set_listen("default", "Silence so severe you go deaf!");
    set_exits( ([ 
         "square" :  "/d/standard/square",
         "range"  :  "/wizards/stormbringer/room/newhouse.c",
         "hall"  :  "/d/standard/adv_inner",
         "mageh"  :  "/d/standard/mage_hall.c",
         "monkh"  :  "/d/standard/monk_hall.c",
         "fighterh"  :  "/d/standard/fghrhall.c",
         "clerich"  :  "/d/standard/cleric_hall.c",
         "rogueh"  :  "/d/standard/rogue_hall.c",
         "kataanh"  :  "/d/standard/kataan_hall.c",
         "dragonh"  :  "/d/standard/dragon_hall.c"
    ]) );
    ob = new(BBOARD);
    ob->set_name("spell");
    ob->set_location("/wizards/stormbringer/workroom");
    ob->set_id( ({ "board", "spell", "spell board" }) );
    ob->set_board_id("spell_idea");
    ob->set_max_posts(50);
    ob->set_short("Spell Board");
    ob->set_long("The Spell Board. <next> to next board, and "
      "<back> will make this the iron forge again.");
   }

 int next() {
   int i, read, total, diff;

   diff = 0;
   while(!diff) {
   i = x + 1;
   if (i >= sizeof(boards)) {
     x = 0;
     write("%^YELLOW%^You are now reading: %^RESET%^spell_idea%^YELLOW%^ "
       "by default.");
     tell_room(environment(this_player()), "%^YELLOW%^The board is now set to: "
       "%^RESET%^spell_idea%^YELLOW%^ by default.", ({ this_player() }));
     diff = BBOARD_D->get_num_read(boards[x], this_player()->query_name());
     diff -= BBOARD_D->get_num_posts(boards[x]);
     break;
   }
   else x++;
   if (!total = (int)BBOARD_D->get_num_posts(boards[x])) continue;
   read = (int)BBOARD_D->get_num_read(boards[x], this_player()->query_name());
   diff = total - read;
   if (read == total) continue;
   if (total == 0) continue;
  }
   write("%^YELLOW%^You are now reading:%^RESET%^ "+boards[x]+" ("+(string)diff+").");
   tell_room(environment(this_player()),
      "%^YELLOW%^The board is now set to: %^RESET%^"+boards[x]+".",
      ({ this_player() }));
   ob->set_board_id(boards[x]);
   return 1;
  }

 int back() {
   write("%^YELLOW%^You are now reading:%^RESET%^ spell_idea.");
   tell_room(environment(this_object()),
      "%^YELLOW%^The board is now set to:%^RESET%^ spell_idea.");
   ob->set_board_id("spell_idea");
   x = 0;
   return 1;
  }

void reset() {
 ::reset();
   if (!present("board"))
      new("/wizards/stormbringer/board")->move(this_object());
  }

mixed init() {
  ::init();

   add_action("next", "next");
   add_action("back", "back");
  }

